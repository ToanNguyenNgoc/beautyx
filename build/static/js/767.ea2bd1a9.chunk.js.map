{"version":3,"file":"static/js/767.ea2bd1a9.chunk.js","mappings":"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","sources":["features/BuyNow/ProductItem.tsx","features/BuyNow/index.tsx"],"sourcesContent":["import React from 'react';\nimport formatPrice from '../../utils/formatPrice';\nimport { DISCOUNT_TYPE } from '../../utils/formatRouterLink/fileType';\n\nfunction ProductItem(props: any) {\n    const { product, quantity } = props;\n    let DISCOUNT_FINAl = false;\n    if (product.discount?.discount_type === DISCOUNT_TYPE.FINAL_PRICE.key) {\n        DISCOUNT_FINAl = true\n    }\n    return (\n        <div className='buy-now-item'>\n            <div className=\"product-item\">\n                <img src={product.image_url} alt=\"\" className=\"product-item__img\" />\n            </div>\n            <div className=\"product-item__detail\">\n                <span className=\"product-item__detail-name\">\n                    {product.product_name}\n                </span>\n                <div className=\"product-item__detail-total\">\n                    <span className=\"quantity\">x {quantity}</span>\n                    <div className=\"price\">\n                        {\n                            DISCOUNT_FINAl ?\n                                <span>{formatPrice(product.discount?.discount_value)}</span>\n                                :\n                                <>\n                                    {\n                                        product.special_price > 0 ?\n                                            <>\n                                                <span style={{ color: \"var(--orange)\" }} >{formatPrice(product.special_price)}đ</span>\n                                                <span>{formatPrice(product.retail_price)}đ</span>\n                                            </>\n                                            :\n                                            <span>\n                                                {formatPrice(product.retail_price)}đ\n                                            </span>\n                                    }\n                                </>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProductItem;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport HeadMobile from '../HeadMobile';\nimport HeadTitle from '../HeadTitle';\nimport { Container } from '@mui/material'\nimport './style.css';\nimport './serviceDetail.css';\nimport UserPaymentInfo from '../../pages/Account/components/UserPaymentInfo';\nimport ProductItem from './ProductItem';\nimport formatPrice from '../../utils/formatPrice';\nimport { FLAT_FORM_TYPE } from '../../rootComponents/flatForm';\nimport { EXTRA_FLAT_FORM } from '../../api/extraFlatForm';\nimport { pickBy, identity } from 'lodash'\nimport order from '../../api/orderApi';\nimport { IUserAddress } from '../../interface/userAddress'\nimport { formatAddCart } from '../../utils/cart/formatAddCart';\nimport { DISCOUNT_TYPE } from '../../utils/formatRouterLink/fileType';\n\n// ==== api tracking ====\nimport tracking from \"../../api/trackApi\";\nimport { formatProductList } from \"../../utils/tracking\";\nimport { XButton } from 'components/Layout';\nimport { useDeviceMobile } from 'hooks';\nimport { DetailOrgCard } from 'pages/_SerProCoDetail';\nimport PaymentMethod from 'components/PaymentMethod';\n// end\nfunction BuyNow() {\n    const IS_MB = useDeviceMobile();\n    const location: any = useLocation();\n    const history = useHistory();\n    const FLAT_FORM = EXTRA_FLAT_FORM();\n    const [address, setAddress] = useState<IUserAddress>();\n    const { org, products } = location.state;\n    let { total } = products?.reduce(\n        (cartTotal: any, cartItem: any) => {\n            const { quantity, product } = cartItem;\n            let priceBuy = product.special_price > 0 ? product.special_price : product.retail_price\n            if (product.discount?.discount_type === DISCOUNT_TYPE.FINAL_PRICE.key) {\n                priceBuy = product.discount?.discount_value\n            }\n            const itemTotal = priceBuy * quantity;\n            cartTotal.total += itemTotal;\n            return cartTotal;\n        },\n        {\n            total: 0\n        }\n    );\n\n    const [methodId, setMethodId] = useState<null | number>()\n    const productsPost = products.map((item: any) => {\n        return {\n            id: item.product.id,\n            quantity: item.quantity\n        }\n    })\n    const listPayment = location.state?.products.map((item: any) => {\n        const is_type = 1;\n        const sale_price =\n            item.product?.special_price > 0\n                ? item.product?.special_price\n                : item.product?.retail_price;\n        const values = formatAddCart(\n            item.product,\n            org,\n            is_type,\n            item.quantity,\n            sale_price,\n        );\n        return values\n    })\n    const params_string = {\n        products: productsPost,\n        services: [],\n        treatment_combo: [],\n        payment_method_id: methodId,\n        coupon_code: [],\n        description: \"\",\n        user_address_id: address?.id\n    }\n    async function handlePostOrder() {\n        //setLoading(true)\n        const params = pickBy(params_string, identity);\n        try {\n            const productsForTracking = products.map((i: any) => {\n                return {\n                    ...i.product,\n                    quantity: i.quantity\n                }\n            })\n            tracking.PAY_CONFIRM_CLICK(org?.id, formatProductList(productsForTracking))\n            const response = await order.postOrder(org?.id, params);\n            const state_payment = await response.data.context;\n            const desc = await state_payment.payment_gateway.description;\n            const transaction_uuid =\n                state_payment.payment_gateway.transaction_uuid;\n            if (response.data.context.status !== \"CANCELED\") {\n                history.push({\n                    pathname: `/trang-thai-don-hang/${desc}`,\n                    search: transaction_uuid,\n                    state: { state_payment, listPayment },\n                });\n            } else {\n                //setPopUpFail(true)\n            }\n            //setLoading(false);\n        } catch (err) {\n            console.log(err);\n            //setLoading(false);\n        }\n    }\n    const onClickPayment = () => {\n        if (address) {\n            if (FLAT_FORM === FLAT_FORM_TYPE.BEAUTYX) {\n                // if (chooseE_wall) {\n                handlePostOrder()\n                // }\n            } else {\n                handlePostOrder()\n            }\n        }\n    }\n\n    return (\n        <>\n            <HeadTitle title=\"Chi tiết thanh toán\" />\n            {IS_MB && <HeadMobile title='Chi tiết thanh toán' />}\n            <Container>\n                <div className=\"service-detail buy-now-cnt\">\n                    <div className=\"flex-row-sp buy-now__user\">\n                        <div className=\"buy-now__user-left\">\n                            <UserPaymentInfo\n                                onSetAddressDefault={setAddress}\n                            />\n                        </div>\n                        <div className=\"buy-now__user-right\">\n                            {org && <DetailOrgCard org={org} />}\n                        </div>\n                    </div>\n                    <div className=\"buy-now__list\">\n                        <span className=\"title\">Sản phẩm</span>\n                        <ul className=\"list\">\n                            {\n                                products?.map((item: any, index: number) => (\n                                    <li key={index} >\n                                        <ProductItem\n                                            product={item.product}\n                                            quantity={item.quantity}\n                                        />\n                                    </li>\n                                ))\n                            }\n                        </ul>\n                    </div>\n                    <div\n                        style={\n                            FLAT_FORM === FLAT_FORM_TYPE.BEAUTYX &&\n                                location.state.TYPE === \"BOOK_NOW\"\n                                ? { display: \"block\" }\n                                : { display: \"none\" }\n                        }\n                    >\n                        <div\n                            style={FLAT_FORM !== 'BEAUTYX' ? { display: 'none' } : {}}\n                        >\n                            <PaymentMethod\n                                onSetPaymentMethod={(method) => setMethodId(method.id)}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"buy-now__total-cnt\">\n                        <div className=\"buy-now__total\">\n                            <div className=\"flex-row-sp buy-now__total-bill\">\n                                <span>Tổng tiền</span>\n                                <span>{formatPrice(total)}đ</span>\n                            </div>\n                            <div className=\"buy-now__total-pay\">\n                                <div className=\"flex-row-sp amount-total\">\n                                    <span>Tổng thanh toán</span>\n                                    <span>{formatPrice(total)}đ</span>\n                                </div>\n                                <div className=\"amount-btn\">\n                                    <XButton\n                                        onClick={onClickPayment}\n                                        title='Thanh toán'\n                                        loading={false}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Container>\n        </>\n    );\n}\n\nexport default BuyNow;"],"names":["props","product","quantity","DISCOUNT_FINAl","discount","discount_type","DISCOUNT_TYPE","className","src","image_url","alt","product_name","formatPrice","discount_value","special_price","style","color","retail_price","IS_MB","useDeviceMobile","location","useLocation","history","useHistory","FLAT_FORM","EXTRA_FLAT_FORM","address","setAddress","useState","org","products","state","total","reduce","cartTotal","cartItem","priceBuy","itemTotal","methodId","setMethodId","productsPost","map","item","id","listPayment","sale_price","formatAddCart","params_string","services","treatment_combo","payment_method_id","coupon_code","description","user_address_id","async","handlePostOrder","params","pickBy","identity","productsForTracking","i","tracking","formatProductList","response","order","state_payment","data","context","desc","payment_gateway","transaction_uuid","status","push","pathname","search","err","console","log","HeadTitle","title","HeadMobile","Container","UserPaymentInfo","onSetAddressDefault","index","FLAT_FORM_TYPE","TYPE","display","PaymentMethod","onSetPaymentMethod","method","onClick","loading"],"sourceRoot":""}