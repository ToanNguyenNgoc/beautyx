{"version":3,"file":"static/js/308.70cf22fd.chunk.js","mappings":"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","sources":["webpack://web-booking/./src/pages/Messenger/message.module.css?9dc9","pages/Messenger/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"message_container__AxLpV\",\"left\":\"message_left__k4A+R\",\"left_head\":\"message_left_head__T--mk\",\"left_head_top\":\"message_left_head_top__TNK6L\",\"left_head_txt\":\"message_left_head_txt__MsKN9\",\"left_head_bot\":\"message_left_head_bot__gwXBX\",\"left_body\":\"message_left_body__xLWq0\",\"topic\":\"message_topic__bGPa4\",\"topic_left_img\":\"message_topic_left_img__s85aR\",\"topic_left_online\":\"message_topic_left_online__7lGks\",\"topic_right\":\"message_topic_right__B9HX4\",\"topic_name\":\"message_topic_name__VZ3tS\",\"topic_message\":\"message_topic_message__Cxfkf\",\"right\":\"message_right__T+jke\",\"left_ch\":\"message_left_ch__pIzTj\",\"right_ch\":\"message_right_ch__Yr32q\"};","import { useAuth, useDebounce, useSwrInfinite } from \"hooks\";\nimport { ITopic } from \"interface\";\nimport { paramsTopic } from \"params-query\";\nimport { useState } from \"react\";\nimport { Link, Route, Switch, useLocation } from \"react-router-dom\";\nimport { Loader, Right } from \"./components\"\nimport style from \"./message.module.css\"\nimport icon from \"constants/icon\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { formatDateFromNow, onErrorAvatar, unique } from \"utils\";\nimport AuthRoute from \"route/AuthRoute\";\n\nfunction Messenger() {\n  const { USER } = useAuth()\n  const [query,] = useState(paramsTopic)\n  const location = useLocation()\n  const { onSetDebounceKeyword } = useDebounce()\n  const [keyword, setKeyword] = useState('')\n  const handleChangeSearch = (txt: string) => {\n    onSetDebounceKeyword({\n      text: txt,\n      callback: (text) => setKeyword(text)\n    })\n  }\n\n  const topic_id = location.pathname.split(\"/\")[2]\n  const { resData, onLoadMore, totalItem } = useSwrInfinite({\n    API_URL: \"topics\",\n    enable: USER,\n    params: Object.assign(query, { s: keyword }),\n    dedupingInterval: 0\n  })\n  const more = () => { if (resData.length < totalItem) { onLoadMore() } }\n  return (\n    <div className={style.container}>\n      <div className={topic_id ? `${style.left} ${style.left_ch}` : style.left}>\n        <div className={style.left_head}>\n          <div className={style.left_head_top}>\n            <span className={style.left_head_txt}>Chat</span>\n            <div className={style.left_head_ctl}></div>\n          </div>\n          <div className={style.left_head_bot}>\n            <img src={icon.searchGray} alt=\"\" />\n            <input type=\"text\" placeholder=\"Tìm kiếm trong tin nhắn...\" onChange={e => handleChangeSearch(e.target.value)} />\n          </div>\n        </div>\n        <div className={style.left_body}>\n          <InfiniteScroll\n            hasMore={true}\n            height={`calc(100vh - 172px)`}\n            dataLength={resData.length}\n            loader={resData.length < totalItem && <Loader />}\n            next={more}\n          >\n            <ul className={style.topic_list}>\n              {\n                resData.map((item: ITopic) => (\n                  <li key={item._id} className={style.topic_cnt}>\n                    <Topic item={item} />\n                  </li>\n                ))\n              }\n            </ul>\n          </InfiniteScroll>\n        </div>\n      </div>\n      <Switch>\n        <AuthRoute>\n          <Route path=\"/messages/:_id\">\n            <div\n              style={{ backgroundColor: 'var(--white)' }}\n              className={topic_id ? `${style.right} ${style.right_ch}` : style.right}\n            >\n              <Right />\n            </div>\n          </Route>\n        </AuthRoute>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Messenger;\n\nconst Topic = ({ item }: { item: ITopic }) => {\n  const location = useLocation()\n  let name = item.name\n  if (item.name?.trim().length === 0 || !item.name) {\n    name = unique(item.topic_user?.map(i => i.user?.fullname).filter(Boolean)).join(\", \")\n  }\n  const topic_id = location.pathname.split(\"/\")[2]\n  return (\n    <Link\n      style={item._id === topic_id ? { backgroundColor: 'var(--bg-color)' } : {}}\n      to={{ pathname: `/messages/${item._id}`, state: item }}\n      className={style.topic}\n    >\n      <div className={style.topic_left}>\n        <div className={style.topic_left_img}>\n          <img src={item.organization?.image_url || ''} onError={onErrorAvatar} alt=\"\" />\n          <span className={style.topic_left_online}></span>\n        </div>\n      </div>\n      <div className={style.topic_right}>\n        <span className={style.topic_name}>\n          {item.organization?.name || name}\n        </span>\n        <div className={style.topic_message}>\n          <span>{item.messages[0]?.msg}</span>\n          <span>{formatDateFromNow(item.updated_at)}</span>\n        </div>\n      </div>\n    </Link>\n  )\n}"],"names":["USER","useAuth","query","useState","paramsTopic","location","useLocation","onSetDebounceKeyword","useDebounce","keyword","setKeyword","topic_id","pathname","split","resData","onLoadMore","totalItem","useSwrInfinite","API_URL","enable","params","Object","assign","s","dedupingInterval","_jsxs","className","style","container","children","left","left_ch","left_head","left_head_top","_jsx","left_head_txt","left_head_ctl","left_head_bot","src","icon","searchGray","alt","type","placeholder","onChange","e","handleChangeSearch","txt","target","value","text","callback","left_body","InfiniteScroll","hasMore","height","dataLength","length","loader","Loader","next","more","topic_list","map","item","topic_cnt","Topic","_id","Switch","AuthRoute","Route","path","backgroundColor","right","right_ch","Right","_ref","_item$name","_item$organization","_item$organization2","_item$messages$","name","_item$topic_user","trim","unique","topic_user","i","_i$user","user","fullname","filter","Boolean","join","Link","to","state","topic","topic_left","topic_left_img","organization","image_url","onError","onErrorAvatar","topic_left_online","topic_right","topic_name","topic_message","messages","msg","formatDateFromNow","updated_at"],"sourceRoot":""}