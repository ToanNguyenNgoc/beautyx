{"version":3,"file":"static/js/769.28696f69.chunk.js","mappings":"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","sources":["webpack://web-booking/./src/pages/Trends/trends.module.css?6c50","pages/Trends/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container_large\":\"trends_container_large__B3usY\",\"trend_list\":\"trends_trend_list__b0stv\",\"video_item_cnt\":\"trends_video_item_cnt__Y04IM\",\"trend_list_video_thumb\":\"trends_trend_list_video_thumb__fiLD0\",\"trend_item_video_thumb\":\"trends_trend_item_video_thumb__QZNby\",\"trend_item_head\":\"trends_trend_item_head__bhL+j\",\"trend_item_center\":\"trends_trend_item_center__LyHmS\",\"trend_item_bot_ex\":\"trends_trend_item_bot_ex__3tgm-\",\"trend_item_desc\":\"trends_trend_item_desc__kPdxa\",\"trend_item_bot_org\":\"trends_trend_item_bot_org__Alayd\",\"trend_item_bot_org_img\":\"trends_trend_item_bot_org_img__XSgoS\",\"trend_item_bot_org_name\":\"trends_trend_item_bot_org_name__FHDqR\",\"trend_item_head_org\":\"trends_trend_item_head_org__j14Ob\",\"trend_item_head_name\":\"trends_trend_item_head_name__RXuqV\",\"org_name\":\"trends_org_name__0zme9\",\"create_at\":\"trends_create_at__TG4lF\",\"trend_item_bot\":\"trends_trend_item_bot__GH2bq\",\"item_ex\":\"trends_item_ex__Jx-cl\",\"item_ex_icon\":\"trends_item_ex_icon__zyDMA\",\"item_ex_text\":\"trends_item_ex_text__FYVm1\"};","/* eslint-disable react-hooks/exhaustive-deps */\nimport API_3RD from \"api/3rd-api\";\nimport Head from \"features/Head\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDeviceMobile, useElementOnScreen, useFetch } from \"hooks\";\nimport { ITrend } from \"./trend.interface\";\nimport { Container } from \"@mui/system\";\nimport style from \"./trends.module.css\";\nimport moment from \"moment\";\nimport icon from \"constants/icon\";\nimport { useHistory } from \"react-router-dom\";\nimport { XButton } from \"components/Layout\";\nimport { formatRouterLinkOrg } from \"utils/formatRouterLink/formatRouter\";\n\nfunction Trends() {\n    const { response } = useFetch(\n        true,\n        `${API_3RD.API_NODE}/trends?include=services`\n    );\n\n    const trends: ITrend[] = response?.context?.data ?? [];\n    const [playVideo, setPlayVideo] = useState(0)\n    return (\n        <>\n            <Head title=\"Xu hướng\" />\n            <Container>\n                <div className={style.container_large}>\n                    <ul className={style.trend_list}>\n                        {\n                            trends.map((item: ITrend, index: number) => (\n                                <li key={index} className={style.trend_list_video_thumb}>\n                                    <VideoItemThumb\n                                        item={item}\n                                        playVideo={playVideo}\n                                        setPlayVideo={setPlayVideo}\n                                        index={index}\n                                    />\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n            </Container>\n        </>\n    );\n}\n\nexport default Trends;\n\ninterface VideoItemThumbProps {\n    item: ITrend, playVideo: number,\n    setPlayVideo: (playVideo: number) => void,\n    index: number\n}\n\nconst VideoItemThumb = (props: VideoItemThumbProps) => {\n    const { item, index, playVideo, setPlayVideo } = props;\n    const history = useHistory()\n    const IS_MB = useDeviceMobile()\n    const onDetail = () => {\n        history.push(`/video/${item._id}`)\n    }\n    const onToggleVideo = () => {\n        if (IS_MB && index === playVideo) return setPlayVideo(-1)\n        setPlayVideo(index)\n    }\n\n    const videoRef = useRef<HTMLVideoElement>(null)\n    const itemRef = useRef<HTMLDivElement>(null)\n    const options = {\n        root: null,\n        rootMargin: \"0px\",\n        threshold: 0.3,\n    };\n    const isVisible = useElementOnScreen(options, itemRef);\n    useEffect(() => {\n        if (isVisible) {\n            setPlayVideo(index)\n        }\n    }, [isVisible])\n    useEffect(() => {\n        if (playVideo === index) {\n            videoRef.current?.play()\n        } else {\n            videoRef.current?.pause()\n        }\n    }, [playVideo]);\n    const onOrgDetail = ()=>{\n        history.push(formatRouterLinkOrg(item.organization_id))\n    }\n    return (\n        <div\n            // to={{ pathname: `/video/${item._id}` }}\n            onMouseEnter={!IS_MB ? () => onToggleVideo() : () => { }}\n            onClick={!IS_MB ? () => onDetail() : () => { }}\n            className={style.video_item_cnt}\n        >\n            <div\n                ref={itemRef} className={style.trend_item_center}\n            >\n                {\n                    playVideo !== index &&\n                    <XButton\n                        icon={icon.playCircle}\n                        iconSize={42}\n                    />\n                }\n            </div>\n            <div \n                onClick={onOrgDetail}\n                className={style.trend_item_head}\n            >\n                <div className={style.trend_item_head_org}>\n                    <img src={item.organization_image} alt=\"\" />\n                </div>\n                <div className={style.trend_item_head_name}>\n                    <p className={style.org_name}>{item.organization_name}</p>\n                    <p className={style.create_at}>{moment(item.createdAt).fromNow()}</p>\n                </div>\n            </div>\n            <video\n                onClick={IS_MB ? () => onToggleVideo() : () => { }}\n                ref={videoRef}\n                className={style.trend_item_video_thumb}\n                webkit-playsinline=\"webkit-playsinline\"\n                playsInline={true}\n            >\n                <source type=\"video/mp4\" src={`${item.media_url}#t=0.001`} />\n            </video>\n            <div className={style.trend_item_bot}>\n                <div onClick={onDetail} className={style.trend_item_bot_ex}>\n                    <div className={style.item_ex}>\n                        <img className={style.item_ex_icon} src={icon.heartBoldBlack} alt=\"\" />\n                        <span className={style.item_ex_text}></span>\n                    </div>\n                    <div className={style.item_ex}>\n                        <img className={style.item_ex_icon} src={icon.commentBoldBlack} alt=\"\" />\n                        <span className={style.item_ex_text}></span>\n                    </div>\n                </div>\n                <p className={style.trend_item_desc}>\n                    {item.content}\n                </p>\n                <div className={style.trend_item_bot_org}>\n                    <div className={style.trend_item_bot_org_img}>\n                        <img src={item.organization_image} alt=\"\" />\n                    </div>\n                    <span className={style.trend_item_bot_org_name}>{item.organization_name}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n"],"names":["response","useFetch","API_3RD","trends","context","data","playVideo","setPlayVideo","useState","Head","title","Container","className","style","map","item","index","VideoItemThumb","props","history","useHistory","IS_MB","useDeviceMobile","onDetail","push","_id","onToggleVideo","videoRef","useRef","itemRef","isVisible","useElementOnScreen","root","rootMargin","threshold","useEffect","current","play","pause","onMouseEnter","onClick","ref","icon","iconSize","formatRouterLinkOrg","organization_id","src","organization_image","alt","organization_name","moment","createdAt","fromNow","playsInline","type","media_url","content"],"sourceRoot":""}