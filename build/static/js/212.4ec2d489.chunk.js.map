{"version":3,"file":"static/js/212.4ec2d489.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/AvatarGroup/avatarGroupClasses.js","../node_modules/@mui/material/AvatarGroup/AvatarGroup.js","webpack://web-booking/./src/pages/Community/pages/GroupDetail/group-detail.module.css?7fc2","pages/Community/pages/GroupDetail/GroupInfo.tsx","pages/Community/pages/GroupDetail/index.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getAvatarGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatarGroup', slot);\n}\nconst avatarGroupClasses = generateUtilityClasses('MuiAvatarGroup', ['root', 'avatar']);\nexport default avatarGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"componentsProps\", \"max\", \"slotProps\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(({\n  theme\n}) => ({\n  [`& .${avatarClasses.root}`]: {\n    border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  },\n  display: 'flex',\n  flexDirection: 'row-reverse'\n}));\nconst AvatarGroupAvatar = styled(Avatar, {\n  name: 'MuiAvatarGroup',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})(({\n  theme\n}) => ({\n  border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n  boxSizing: 'content-box',\n  marginLeft: -8,\n  '&:last-child': {\n    marginLeft: 0\n  }\n}));\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  var _slotProps$additional;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n  const {\n      children: childrenProp,\n      className,\n      component = 'div',\n      componentsProps = {},\n      max = 5,\n      slotProps = {},\n      spacing = 'medium',\n      total,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let clampedMax = max < 2 ? 2 : max;\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  const additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsxs(AvatarGroupAvatar, _extends({\n      ownerState: ownerState,\n      variant: variant\n    }, additionalAvatarSlotProps, {\n      className: clsx(classes.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),\n      style: _extends({\n        marginLeft\n      }, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.style),\n      children: [\"+\", extraAvatars]\n    })) : null, children.slice(0, maxAvatars).reverse().map((child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        style: _extends({\n          // Consistent with \"&:last-child\" styling for the default spacing,\n          // we do not apply custom marginLeft spacing on the last child\n          marginLeft: index === maxAvatars - 1 ? undefined : marginLeft\n        }, child.props.style),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"group-detail_container__Wx2LZ\",\"cover\":\"group-detail_cover__Q3oVa\",\"cover_image_bg\":\"group-detail_cover_image_bg__wqniT\",\"cover_image\":\"group-detail_cover_image__rUavc\",\"detail_cnt\":\"group-detail_detail_cnt__zofGn\",\"detail\":\"group-detail_detail__H02MO\",\"group_name\":\"group-detail_group_name__5XwMh\",\"group_member\":\"group-detail_group_member__3PplR\",\"group_member_count\":\"group-detail_group_member_count__M7mGm\",\"detail_right_join_btn\":\"group-detail_detail_right_join_btn__G4wqK\",\"title\":\"group-detail_title__46Jcf\",\"body\":\"group-detail_body__F1l4Q\",\"body_left\":\"group-detail_body_left__Btm2i\",\"group_post_inp\":\"group-detail_group_post_inp__wyKJu\",\"desc\":\"group-detail_desc__PKFR7\",\"desc_cnt\":\"group-detail_desc_cnt__E0QQs\",\"information\":\"group-detail_information__kIGBi\",\"info_wrapper\":\"group-detail_info_wrapper__6qy7b\",\"info_section\":\"group-detail_info_section__UGqh5\",\"info_section_title\":\"group-detail_info_section_title__bNN04\",\"info_section_desc\":\"group-detail_info_section_desc__4v-az\",\"info_section_other\":\"group-detail_info_section_other__docWG\",\"info_section_other_item\":\"group-detail_info_section_other_item__ZN4Os\",\"info_member_item\":\"group-detail_info_member_item__fwn9J\",\"info_member_item_avt\":\"group-detail_info_member_item_avt__OT2dp\",\"info_member_item_name\":\"group-detail_info_member_item_name__EvIxQ\",\"head_mobile\":\"group-detail_head_mobile__Q0ZLz\",\"head_mobile_back\":\"group-detail_head_mobile_back__gk9-b\",\"post_list_item\":\"group-detail_post_list_item__pfxCE\"};","import { Dialog } from '@mui/material';\nimport icon from 'constants/icon';\nimport HeadMobile from 'features/HeadMobile';\nimport { useDeviceMobile } from 'hooks';\nimport { IGroup } from 'pages/Community/data';\nimport React from 'react';\nimport style from './group-detail.module.css'\n\ninterface GroupInfoProps {\n    open: boolean, setOpen: (open: boolean) => void, group: IGroup,\n    postListCount: number\n}\n\nfunction GroupInfo(props: GroupInfoProps) {\n    const { open, setOpen, group, postListCount } = props\n    const IS_MB = useDeviceMobile()\n    const members: any[] = []\n    for (var i = 0; i < 20; i++) {\n        const member = {\n            id: i,\n            fullname: `Full name ${i}`,\n            avatar: `https://picsum.photos/id/1${i}/100/100`\n        }\n        members.push(member)\n    }\n\n    return (\n        <>\n            <Dialog fullScreen={IS_MB} open={open} onClose={() => setOpen(false)} >\n            {IS_MB && <HeadMobile onBackFunc={() => setOpen(false)} title={group?.name} />}\n                <div className={style.information}>\n                    <div className={style.info_wrapper}>\n                        <div className={style.info_section}>\n                            <p className={style.info_section_title}>\n                                Thông tin chung\n                            </p>\n                            <div className={style.info_section_desc}>\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                                Proin laoreet elit purus, et gravida libero. Lorem ipsum\n                                dolor sit amet ...Xem thêm\n                            </div>\n                            <ul className={style.info_section_other}>\n                                <li className={style.info_section_other_item}>\n                                    <img src={icon.userGray} alt=\"\" />\n                                    200 thành viên\n                                </li>\n                                <li className={style.info_section_other_item}>\n                                    <img src={icon.postGray} alt=\"\" />\n                                    {postListCount} bài viết\n                                </li>\n                                <li className={style.info_section_other_item}>\n                                    <img src={icon.createAtGray} alt=\"\" />\n                                    Tạo ngày 01/12/2022\n                                </li>\n                            </ul>\n                        </div>\n                        <div className={style.info_section}>\n                            <p className={style.info_section_title}>\n                                Quy định nhóm\n                            </p>\n                            <div className={style.info_section_desc}>\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n                                Proin laoreet elit purus, et gravida libero. Lorem ipsum\n                                dolor sit amet ...Xem thêm\n                            </div>\n                        </div>\n                        <div className={style.info_section}>\n                            <p className={style.info_section_title}>\n                                Thành viên nhóm\n                            </p>\n                            <ul className={style.info_member_list}>\n                                {\n                                    members.map(i => (\n                                        <li key={i.id} className={style.info_member_item}>\n                                            <div className={style.info_member_item_avt}>\n                                                <img src={i.avatar} alt=\"\" />\n                                            </div>\n                                            <div className={style.info_member_item_name}>\n                                                {i.fullname}\n                                            </div>\n                                        </li>\n                                    ))\n                                }\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </Dialog>\n        </>\n    );\n}\n\nexport default GroupInfo;","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Avatar, AvatarGroup } from '@mui/material';\nimport { Container } from '@mui/system';\nimport { XButton } from 'components/Layout';\nimport HeadMobile from 'features/HeadMobile';\nimport HeadTitle from 'features/HeadTitle';\nimport { useDeviceMobile } from 'hooks';\nimport IStore from 'interface/IStore';\nimport imgC from 'pages/Community/assets';\nimport { PostInput } from 'pages/Community/components';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { groups, IGroup, IPost } from '../../data'\nimport style from './group-detail.module.css'\nimport GroupInfo from './GroupInfo';\n\n\nfunction GroupDetail() {\n    const { id } = useParams() as any\n    const IS_MB = useDeviceMobile()\n    const history = useHistory()\n    const [open, setOpen] = useState(false)\n    const group = groups.find((i: IGroup) => i.id === parseInt(id))\n    useEffect(() => {\n        if (!id || !group) history.replace('/error')\n    }, [])\n    const { posts } = useSelector((state: IStore) => state.COMMUNITY)\n    const postList = posts.filter((i: IPost) => i.group.id === parseInt(id))\n\n    window.addEventListener('scroll', () => {\n        const header = document.getElementById(\"head_mobile\");\n        const scrolled = window.scrollY;\n        if (header) {\n            header.style.backgroundColor = `rgb(255 255 255 / ${scrolled}%)`\n        }\n    })\n\n    return (\n        <>\n            <HeadTitle title={group?.name} />\n            {\n                IS_MB && <HeadMobile\n                    className={style.head_mobile}\n                    classNameInput={style.head_mobile_back}\n                    title=''\n                />\n            }\n            <Container>\n                <div className={style.container}>\n                    <div className={style.cover}>\n                        <img src={group?.image_url} className={style.cover_image_bg} alt=\"\" />\n                        <div className={style.cover_image}>\n                            <img src={group?.image_url} alt=\"\" />\n                        </div>\n                        <div className={style.detail_cnt}>\n                            <div className={style.detail}>\n                                <div className={style.detail_left}>\n                                    <p className={style.group_name}>{group?.name}</p>\n                                    <div className={style.group_member}>\n                                        <AvatarGroup max={4}>\n                                            <Avatar alt=\"Remy Sharp\" src={imgC.avatar} />\n                                            <Avatar alt=\"Travis Howard\" src={imgC.avatar} />\n                                            <Avatar alt=\"Cindy Baker\" src={imgC.avatar} />\n                                            <Avatar alt=\"Agnes Walker\" src={imgC.avatar} />\n                                            <Avatar alt=\"Trevor Henderson\" src={imgC.avatar} />\n                                        </AvatarGroup>\n                                        <span className={style.group_member_count}>\n                                            200 thành viên\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className={style.detail_right}>\n                                    <XButton\n                                        className={style.detail_right_join_btn}\n                                        title='Tham gia ngay'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={style.body}>\n                        <div className={style.body_left}>\n                            <div className={style.group_post_inp}>\n                                <p className={style.title}>Tạo </p>\n                                {group && <PostInput group={group} />}\n                            </div>\n                            <div className={style.group_posts}>\n                                <p className={style.title}>Bài viết ({postList?.length})</p>\n                                <ul className={style.post_list}>\n                                    {\n                                        postList?.map((post, index: number) => (\n                                            <li key={index} className={style.post_list_item}>\n                                                {/* <PostCard post={post} /> */}\n                                            </li>\n                                        ))\n                                    }\n                                </ul>\n                            </div>\n                        </div>\n                        <div className={style.desc}>\n                            <p className={style.title}>Giới thiệu nhóm</p>\n                            <div className={style.desc_cnt}>\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin laoreet elit purus, et gravida libero\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin laoreet elit purus, et gravida libero\n                                ...<span onClick={() => setOpen(true)} >Xem thêm</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Container>\n            {\n                group &&\n                <GroupInfo\n                    open={open}\n                    setOpen={setOpen}\n                    group={group}\n                    postListCount={postList?.length}\n                />\n            }\n        </>\n    );\n}\n\nexport default GroupDetail;"],"names":["getAvatarGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SPACINGS","small","medium","AvatarGroupRoot","styled","name","overridesResolver","props","styles","_extends","avatarGroupClasses","avatar","root","_ref","theme","avatarClasses","border","vars","palette","background","default","boxSizing","marginLeft","display","flexDirection","AvatarGroupAvatar","Avatar","_ref2","React","inProps","ref","_slotProps$additional","useThemeProps","children","childrenProp","className","component","componentsProps","max","slotProps","spacing","total","variant","other","_objectWithoutPropertiesLoose","clampedMax","ownerState","classes","composeClasses","useUtilityClasses","filter","child","totalAvatars","length","Math","min","maxAvatars","extraAvatars","undefined","additionalAvatarSlotProps","additionalAvatar","_jsxs","as","clsx","style","slice","reverse","map","index","open","setOpen","group","postListCount","IS_MB","useDeviceMobile","members","i","member","id","fullname","push","_jsx","_Fragment","Dialog","fullScreen","onClose","HeadMobile","onBackFunc","title","src","icon","alt","useParams","history","useHistory","useState","groups","parseInt","useEffect","replace","posts","useSelector","state","COMMUNITY","postList","window","addEventListener","header","document","getElementById","scrolled","scrollY","backgroundColor","HeadTitle","classNameInput","Container","image_url","AvatarGroup","imgC","XButton","PostInput","post","onClick","GroupInfo"],"sourceRoot":""}