{"version":3,"file":"static/js/841.6cea7604.chunk.js","mappings":"8YAoHA,MApGA,SAAuBA,GACrB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,YAAWC,EAAAA,GACnBC,GAAWC,EAAAA,EAAAA,OACX,OAAEC,IAAWC,EAAAA,EAAAA,KAAaC,GAAeA,EAAMC,QAAQA,WACvD,eAAEC,IAAmBH,EAAAA,EAAAA,KAAaC,GAAeA,EAAMC,WACvD,EAAEE,EAAC,sBAAEC,EAAqB,QAAEC,GAAYb,GACvCc,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,gBAMnCC,EAAAA,EAAAA,YAAU,KAJJX,IAAWY,EAAAA,EAAAA,SACbd,GAASe,EAAAA,EAAAA,KAIc,GACxB,IACH,MAAMC,GAAiBC,EAAAA,EAAAA,cAAaC,IAClCP,EAASO,EAAMC,OAAOT,MAAM,GAC3B,IAUH,OACE,4BACE,SAACU,EAAA,EAAY,CAACC,MAAOxB,EAAE,+BACvB,SAACyB,EAAA,EAAU,CACT,aAAW,SACXC,KAAK,iCACLb,MAAOA,EACPc,SAAUR,EAAe,UAEzB,eAAIS,UAAU,iBAAgB,SACb,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBoB,KAAKC,IAAS,aAC7B,gBAAIF,UAAU,cAAa,WACzB,iBAAKA,UAAU,+BAA8B,WAC3C,SAACG,EAAA,EAAgB,CACflB,MAAOiB,EAAKE,OACZC,SACE,SAACC,EAAA,EAAK,CACJC,GAAI,CAAE,gBAAiB,CAAEC,MAAO,oBAGpCC,MAAOP,EAAKN,SAEd,gBAAKc,IAAKR,EAAKS,IAAKC,IAAI,SAE1B,gBACEC,MACE5B,IAAUiB,EAAKE,OACX,CAAEU,QAAS,SACX,CAAEA,QAAS,QAEjBd,UAAU,kBAAiB,UAE3B,wBACmB,QADnB,EACGE,EAAKa,mBAAW,aAAhB,EAAkBC,QAAQd,GAA4C,UAAf,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMe,YACvDhB,KAAKC,IACJ,eACEF,UAAU,uBAEVkB,QAAS,IA9CLhB,KACxBnB,EAAsBmB,GACtBiB,QAAQC,IAAIlB,GACRlB,GACFA,GAAQ,EACV,EAyCmCqC,CAAiBnB,GAAM,UAEtC,gBACEF,UAAU,2BACVa,MACE/B,IAAMoB,EACF,CACAoB,gBAAiB,UACjBd,MAAO,SAEP,CACAc,gBAAiB,GACjBd,MAAO,WAEZ,SAOAN,EAAKe,YAtBHf,EAAKqB,YA1BWrB,EAAKqB,GAsDjC,UAMjB,ECvFA,MAtBA,SAA2BpD,GACvB,MAAM,KAAEqD,EAAI,QAAExC,EAAO,UAAEyC,EAAS,aAAEC,GAAiBvD,EAC7CwD,GAAQC,EAAAA,EAAAA,MACd,OACI,+BACI,SAACC,EAAA,GAAM,CACHL,KAAMA,EACNM,QAAS,IAAM9C,GAAQ,GACvB+C,OAAQJ,EAAQ,SAAW,QAAQ,UAEnC,gBAAK3B,UAAU,qBAAoB,UAC/B,SAAC,EAAa,CACVlB,EAAG2C,EACH1C,sBAAuB2C,EACvB1C,QAASA,SAMjC,E,mGCKA,MAAMgD,EAAwB,CAC1BC,WAAY,8BACZV,GAAI,EACJW,eAAe,EACfjB,SAAU,OACVkB,WAAY,+BA2LhB,MAxLA,WAAkB,IAAD,EACb,MAAMC,GAAYC,EAAAA,EAAAA,KACZ9D,GAAWC,EAAAA,EAAAA,OACX,mBAAE8D,EAAkB,WAAEC,EAAU,cAAEC,IAAkB9D,EAAAA,EAAAA,KACrDC,GAAeA,EAAM8D,SAGpB,KAAEC,IAAShE,EAAAA,EAAAA,KAAaC,GAAeA,EAAM+D,OAE7CC,GADcjE,EAAAA,EAAAA,KAAaC,GAAeA,EAAM8D,MAAME,WAC/B3B,QAAQ4B,IAAY,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGC,YAAgB,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMnB,MAG/DuB,EAAgE,QAA7D,EAAGH,EAAS3B,QAAQd,IAAiC,IAAnBA,EAAK6C,YAAoB,UAAE,aAA1D,EAA4DD,KAaxE1D,EAAAA,EAAAA,YAAU,KACNb,GAASyE,EAAAA,EAAAA,OACLF,GAbkBG,WACtB,MAAMC,EAAS,CAAEC,OAAQL,EAAIvB,IACvB6B,QAAY7E,GAAS8E,EAAAA,EAAAA,IAAuBH,KAC5C,UAAEI,GAAcF,EAAIG,QACtBD,EAAUE,OAAS,GACnBjF,GAASkF,EAAAA,EAAAA,IAAgB,CACrBX,IAAKA,EACLY,UAAUC,EAAAA,EAAAA,IAAWL,KAE7B,EAKIM,EACJ,GACD,CAACd,IAEJ,MAAMe,EAAclB,EAAS3B,QAAQd,IAAiC,IAAnBA,EAAK6C,aASxD3D,EAAAA,EAAAA,YAAU,KACNb,GAASuF,EAAAA,EAAAA,IAAa,OAAJpB,QAAI,IAAJA,OAAI,EAAJA,EAAMnB,IAAI,GAC7B,CAAChD,EAAUoE,EAAUD,EAAMF,IAE9B,MAAOhB,EAAMxC,IAAWG,EAAAA,EAAAA,WAAS,IAC1BsC,EAAWC,IAAgBvC,EAAAA,EAAAA,UAAc6C,IACzC+B,EAASC,IAAc7E,EAAAA,EAAAA,aACvB8E,EAAYC,IAAiB/E,EAAAA,EAAAA,UAAS,CACzCqC,MAAM,EACN2C,OAAQ,KACRrB,IAAKA,IAGHsB,EAAY,CAAEzB,WAAUL,qBAAoBC,cAC5C8B,EAAU1B,EAAS1C,KAAKC,GAAcA,EAAKiD,SAC3CxB,GAAQC,EAAAA,EAAAA,MAWR0C,EAVN,SAAgBC,GAEZ,IADA,IAAIC,EAAS,GACJ5B,EAAI,EAAGA,EAAI2B,EAAIf,OAAQZ,KACI,IAA5B4B,EAAOC,QAAQF,EAAI3B,KACnB4B,EAAOE,KAAKH,EAAI3B,IAGxB,OAAO4B,CACX,CACaG,CAAON,GACUpE,KAAKC,IAAU,IAAD,EACxC,MAAM0E,EAAgBjC,EAAS3B,QAAQ4B,GAAW1C,IAAS0C,EAAEO,SAC7D,MAAO,CACHA,OAAQjD,EACR2E,SAA0B,QAAlB,EAAED,EAAc,UAAE,aAAhB,EAAkBC,SAC5BC,MAAOF,EACV,IAGCT,EAAcF,EAAWE,QAEzB,gBAAEY,IAAoBrG,EAAAA,EAAAA,KACvBC,GAAeA,EAAMC,QAAQA,UAM5BoG,EAAW,CAAEvD,YAAWsC,UAASkB,mBAJbC,EAAAA,EAAAA,GACtBH,EACArD,GAEsDoB,MAAKqB,UAE/D,OACI,iCACI,SAACgB,EAAA,EAAS,CAACvF,MAAM,qBAChB+B,GACG,SAACyD,EAAA,EAAU,CACPxF,MAAM,mBACNyF,SACI,SAACC,EAAa,CACV9B,OAAQK,EAAYL,OACpB+B,mBA9DG,KACnB1B,EAAYL,OAAS,GAErBjF,GAASiH,EAAAA,EAAAA,MACb,OA+DQ,SAACC,EAAA,EAAI,IAEa,KAAb,OAAR9C,QAAQ,IAARA,OAAQ,EAARA,EAAUa,SAAiBb,GAGxB,iCACI,SAAC+C,EAAA,EAAS,WACN,iBAAK1F,UAAU,cAAa,WACxB,gBAAKA,UAAU,oBAAmB,UAC9B,SAAC2F,EAAA,EAAe,CACZC,oBAAqB5B,MAG5B5B,IAAcyD,EAAAA,EAAAA,UACX,iBACI3E,QAAS,IAAMlC,GAAQ,GACvBgB,UAAU,mBAAkB,WAE5B,wEACA,mBACA,iBACIa,MAAO,CACHS,gBAAiB,mBACjBwE,WAAY,OACZC,QAAS,UACTC,aAAc,MACdxF,MAAO,gBACT,SAEDiB,EACc,OAATA,QAAS,IAATA,OAAS,EAATA,EAAWR,SACX,uEAIlB,gBAAKjB,UAAU,oBAAmB,UAC9B,eAAIA,UAAU,yBAAwB,SACjCsE,EAAiBrE,KACd,CAACC,EAAW+F,KACR,eAEIjG,UAAU,0BAAyB,UAEnC,SAACkG,EAAA,GAAa,CACVhG,KAAMA,EACN4C,IAAKA,EACLH,SAAUA,EACVsB,WAAYA,EACZC,cACIA,KATH+B,eAmBjC,SAAC,EAAiB,CACdzE,KAAMA,EACNxC,QAASA,EACTyC,UAAWA,EACXC,aAAcA,KAElB,gBAAKb,MAAO,CAAEC,QAAS,QAAS,UAC5B,SAAC,IAAgB,CACbhC,EAAG2C,EACH1C,sBAAuB2C,OAG/B,SAACyE,EAAA,EAAU,CAAC/B,UAAWA,EAAWY,SAAUA,KAC5C,SAACoB,EAAgB,CACbtD,IAAKA,EACLtB,KAAMyC,EACNjF,QAASkF,QAxEjB,SAAC,KAAQ,CAACtE,MAAM,mFA8EhC,EAIA,MAAM0F,EAAiBnH,IACnB,MAAM,OAAEqF,EAAM,mBAAE+B,GAAuBpH,EACvC,OACI,iBACI+C,QAASqE,EACTvF,UAAU,8BAA6B,WAEvC,sCAAWwD,EAAM,QACjB,gBAAK9C,IAAK2F,EAAAA,EAAAA,YAAkBzF,IAAI,OAC9B,EAGRwF,EAAoBjI,IAAgB,IAAD,IACrC,MAAM,KAAEqD,EAAI,QAAExC,GAAYb,EACpB2E,EAAqB3E,EAAM2E,IACjC,OACI,SAACwD,EAAA,EAAM,CACH9E,KAAMA,EAAKA,KACX+E,oBAAqBC,EAAAA,EACrB1E,QAAS,IAAM9C,EAAQ,IAAKwC,EAAMA,MAAM,IAAS,UAEjD,gBAAKxB,UAAU,mBAAkB,UAC7B,gBAAIA,UAAU,OAAM,WAChB,gBACIkB,QAAS,IACLlC,EAAQ,IAAKwC,EAAM2C,OAAQ,KAAM3C,MAAM,IAE3CxB,UAAU,gCAA+B,WAEvCwB,EAAK2C,SACH,iBAAMnE,UAAU,0BAAyB,mCAI7C,gBACIyG,QAAU3H,IAAM4H,EAAAA,EAAAA,IAAW5H,GAC3B4B,IAAQ,OAAHoC,QAAG,IAAHA,OAAG,EAAHA,EAAK6D,UACV/F,IAAI,GACJZ,UAAU,gBAEd,iBAAKA,UAAU,SAAQ,WACnB,iBAAMA,UAAU,cAAa,SAAK,OAAH8C,QAAG,IAAHA,OAAG,EAAHA,EAAKhD,QACpC,iBAAME,UAAU,iBAAgB,SACxB,OAAH8C,QAAG,IAAHA,OAAG,EAAHA,EAAK8D,gBAEV,iBAAM5G,UAAU,eAAc,SACtB,OAAH8C,QAAG,IAAHA,GAAc,QAAX,EAAHA,EAAK+D,iBAAS,WAAX,EAAH,EAAgBC,KAAK,cAI9B,OAAHhE,QAAG,IAAHA,GAAa,QAAV,EAAHA,EAAKiE,gBAAQ,WAAV,EAAH,EAAe9G,KAAI,CAACC,EAAe+F,KAAa,aAC7C,gBACI/E,QAAS,IACLlC,EAAQ,IAAKwC,EAAM2C,OAAQjE,EAAMsB,MAAM,IAG3CxB,UAAU,gCAA+B,WAE7B,QAAX,EAAAwB,EAAK2C,cAAM,aAAX,EAAa5C,OAAW,OAAJrB,QAAI,IAAJA,OAAI,EAAJA,EAAMqB,MACvB,iBAAMvB,UAAU,0BAAyB,mCAI7C,gBACIyG,QAAU3H,IAAM4H,EAAAA,EAAAA,IAAW5H,GAC3B4B,IACQ,OAAJR,QAAI,IAAJA,GAAAA,EAAM8G,MACI,OAAJ9G,QAAI,IAAJA,OAAI,EAAJA,EAAMyG,UACH,OAAH7D,QAAG,IAAHA,OAAG,EAAHA,EAAK6D,UAEf/F,IAAI,GACJZ,UAAU,gBAEd,iBAAKA,UAAU,SAAQ,WACnB,iBAAMA,UAAU,cAAa,SACpB,OAAJE,QAAI,IAAJA,OAAI,EAAJA,EAAMJ,QAEX,iBAAME,UAAU,iBAAgB,SACvB,OAAJE,QAAI,IAAJA,OAAI,EAAJA,EAAM0G,gBAEX,iBAAM5G,UAAU,eAAc,SACrB,OAAJE,QAAI,IAAJA,OAAI,EAAJA,EAAM2G,iBA1BVZ,EA6BJ,UAIZ,C","sources":["pages/Carts/components/PaymentMethod.tsx","pages/Carts/components/CartPaymentMethod.tsx","pages/Carts/index.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\nimport { AppContext } from \"../../../context/AppProvider\";\nimport { IPaymentMethod } from \"../../../interface/paymentMethod\";\nimport { fetAsyncPaymentMethod } from '../../../redux/payments/paymentSlice';\nimport { STATUS } from '../../../redux/status'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SectionTitle from \"features/SectionTitle\";\n\ninterface IProps {\n  e: any,\n  onPaymentMethodChange: (e: any) => void,\n  setOpen?: (open?: boolean) => void,\n}\n\nfunction PaymentMethod(props: IProps) {\n  const { t } = useContext(AppContext);\n  const dispatch = useDispatch();\n  const { status } = useSelector((state: any) => state.PAYMENT.PAYMENT);\n  const { PAYMENT_METHOD } = useSelector((state: any) => state.PAYMENT);\n  const { e, onPaymentMethodChange, setOpen } = props;\n  const [value, setValue] = useState(\"CARD_ONLINE\");\n  const callPaymentMethodOnline = () => {\n    if (status !== STATUS.SUCCESS) {\n      dispatch(fetAsyncPaymentMethod())\n    }\n  }\n  useEffect(() => {\n    callPaymentMethodOnline()\n  }, [])\n  const handleOnChange = useCallback((event: any) => {\n    setValue(event.target.value);\n  }, [])\n\n  const onChoosePmtClick = (item: any) => {\n    onPaymentMethodChange(item)\n    console.log(item)\n    if (setOpen) {\n      setOpen(false)\n    }\n  }\n\n  return (\n    <div>\n      <SectionTitle title={t(\"pm.choose_payment_method\")} />\n      <RadioGroup\n        aria-label=\"gender\"\n        name=\"controlled-radio-buttons-group\"\n        value={value}\n        onChange={handleOnChange}\n      >\n        <ul className=\"payment-method\">\n          {PAYMENT_METHOD?.map((item: any) => (\n            <li className=\"flex-column\" key={item.id}>\n              <div className=\"flex-row payment-method-head\">\n                <FormControlLabel\n                  value={item.method}\n                  control={\n                    <Radio\n                      sx={{ \"&.Mui-checked\": { color: \"var(--purple)\" } }}\n                    />\n                  }\n                  label={item.title}\n                />\n                <img src={item.img} alt=\"\" />\n              </div>\n              <div\n                style={\n                  value === item.method\n                    ? { display: \"block\" }\n                    : { display: \"none\" }\n                }\n                className=\"pm-method_child\"\n              >\n                <ul>\n                  {item.method_list?.filter((item: IPaymentMethod) => item?.name_key === \"MOMO\")\n                    .map((item: IPaymentMethod) => (\n                      <li\n                        className=\"pm-method_child-item\"\n                        key={item.id}\n                        onClick={() => onChoosePmtClick(item)}\n                      >\n                        <div\n                          className=\"pm-method_child-item_box\"\n                          style={\n                            e === item\n                              ? {\n                                backgroundColor: \"#7161BA\",\n                                color: \"white\",\n                              }\n                              : {\n                                backgroundColor: \"\",\n                                color: \"#7161BA\",\n                              }\n                          }\n                        >\n                          {/* {chooseE_wall === item ? (\n                          <img src={icon.success} alt=\"\" />\n                        ) : (\n                          \"\"\n                        )} */}\n                          {item.name_key}\n                        </div>\n                      </li>\n                    ))}\n                </ul>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </RadioGroup>\n    </div>\n  );\n}\n\nexport default PaymentMethod;\n","import React from 'react';\nimport { Drawer } from '@mui/material';\nimport {useDeviceMobile} from 'hooks';\nimport PaymentMethod from './PaymentMethod';\n\nfunction CartPaymentMethod(props: any) {\n    const { open, setOpen, pmtMethod, setPmtMethod } = props;\n    const IS_MB = useDeviceMobile();\n    return (\n        <>\n            <Drawer\n                open={open}\n                onClose={() => setOpen(false)}\n                anchor={IS_MB ? \"bottom\" : \"right\"}\n            >\n                <div className='re-cart-pmt-drawer' >\n                    <PaymentMethod\n                        e={pmtMethod}\n                        onPaymentMethodChange={setPmtMethod}\n                        setOpen={setOpen}\n                    />\n                </div>\n            </Drawer>\n        </>\n    );\n}\n\nexport default CartPaymentMethod;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./style.css\";\nimport icon from \"../../constants/icon\";\nimport Head from \"../../features/Head\";\nimport HeadMobile from \"../../features/HeadMobile\";\nimport HeadTitle from \"../../features/HeadTitle\";\nimport { Container, Dialog } from \"@mui/material\";\nimport UserPaymentInfo from \"../Account/components/UserPaymentInfo\";\nimport CartGroupItem from \"./components/CartGroupItem\";\nimport CartBottom from \"./components/CartBottom\";\nimport { addVoucherByOrg, clearByCheck, getTotal, onClearApplyVoucher } from \"../../redux/cartSlice\";\nimport CartPaymentMethod from \"./components/CartPaymentMethod\";\nimport { EXTRA_FLAT_FORM } from \"../../api/extraFlatForm\";\nimport { FLAT_FORM_TYPE } from \"../../rootComponents/flatForm\";\nimport PaymentMethodCpn from \"../../features/PaymentMethod\";\nimport { extraPaymentMethodId } from \"../../features/PaymentMethod/extraPaymentMethodId\";\nimport { Transition } from \"../../utils/transition\";\n\n// ==== api tracking ====\nimport { IOrganization } from \"../../interface/organization\";\nimport { IBranch } from \"../../interface/branch\";\nimport onErrorImg from \"../../utils/errorImg\";\nimport { useDeviceMobile } from \"hooks\";\nimport { fetchAsyncOrgDiscounts } from \"../../redux/org_discounts/orgDiscountsSlice\";\nimport { IS_VOUCHER } from \"../../utils/cart/checkConditionVoucher\";\nimport { EmptyRes } from \"components/Layout\";\n// end\n\nconst initialMomoForBeautyx = {\n    created_at: \"2022-01-07T10:00:07.000000Z\",\n    id: 1,\n    is_changeable: false,\n    name_key: \"MOMO\",\n    updated_at: \"2022-01-07T10:00:07.000000Z\"\n}\n\nfunction Carts() {\n    const FLAT_FORM = EXTRA_FLAT_FORM();\n    const dispatch = useDispatch();\n    const { cartAmountDiscount, cartAmount, VOUCHER_APPLY } = useSelector(\n        (state: any) => state.carts\n    );\n    // console.log(VOUCHER_APPLY)\n    const { USER } = useSelector((state: any) => state.USER);\n    const cartListAll = useSelector((state: any) => state.carts.cartList)\n    const cartList = cartListAll.filter((i: any) => i?.user_id === USER?.id)\n\n\n    const org = cartList.filter((item: any) => item.isConfirm === true)[0]?.org;\n\n    const callDiscountByOrg = async () => {\n        const values = { org_id: org.id }\n        const res = await dispatch(fetchAsyncOrgDiscounts(values))\n        const { discounts } = res.payload;\n        if (discounts.length > 0) {\n            dispatch(addVoucherByOrg({\n                org: org,\n                vouchers: IS_VOUCHER(discounts)\n            }))\n        }\n    }\n    useEffect(() => {\n        dispatch(onClearApplyVoucher())\n        if (org) {\n            callDiscountByOrg()\n        }\n    }, [org])\n\n    const cartConfirm = cartList.filter((item: any) => item.isConfirm === true);\n\n    const handleClearByCheck = () => {\n        if (cartConfirm.length > 0) {\n            // tracking.CART_DELETE_ALL_CLICK();\n            dispatch(clearByCheck());\n        }\n    };\n\n    useEffect(() => {\n        dispatch(getTotal(USER?.id));\n    }, [dispatch, cartList, USER, VOUCHER_APPLY]);\n\n    const [open, setOpen] = useState(false);\n    const [pmtMethod, setPmtMethod] = useState<any>(initialMomoForBeautyx);\n    const [address, setAddress] = useState<any>();\n    const [openBranch, setOpenBranch] = useState({\n        open: false,\n        branch: null,\n        org: org,\n    });\n\n    const DATA_CART = { cartList, cartAmountDiscount, cartAmount };\n    const orgs_id = cartList.map((item: any) => item.org_id);\n    const IS_MB = useDeviceMobile();\n    function unique(arr: any) {\n        var newArr = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (newArr.indexOf(arr[i]) === -1) {\n                newArr.push(arr[i]);\n            }\n        }\n        return newArr;\n    }\n    const orgs = unique(orgs_id);\n    const cartListGroupOrg = orgs.map((item) => {\n        const cartItemByOrg = cartList.filter((i: any) => item === i.org_id);\n        return {\n            org_id: item,\n            org_name: cartItemByOrg[0]?.org_name,\n            items: cartItemByOrg,\n        };\n    });\n\n    const branch: any = openBranch.branch;\n\n    const { payments_method } = useSelector(\n        (state: any) => state.PAYMENT.PAYMENT\n    );\n    const payment_method_id = extraPaymentMethodId(\n        payments_method,\n        setPmtMethod\n    );\n    const DATA_PMT = { pmtMethod, address, payment_method_id, org, branch };\n    // console.log(cartListGroupOrg,cartList,cartListAll);\n    return (\n        <>\n            <HeadTitle title=\"Giỏ hàng\" />\n            {IS_MB ? (\n                <HeadMobile\n                    title=\"Giỏ hàng\"\n                    element={\n                        <CartHeadRight\n                            length={cartConfirm.length}\n                            handleClearByCheck={handleClearByCheck}\n                        />\n                    }\n                />\n            ) : (\n                <Head />\n            )}\n            {cartList?.length === 0 || !cartList ? (\n                <EmptyRes title='Không có Dịch vụ/Sản phẩm trong giỏ hàng !' />\n            ) : (\n                <>\n                    <Container>\n                        <div className=\"re-cart-cnt\">\n                            <div className=\"re-cart-cnt__head\">\n                                <UserPaymentInfo\n                                    onSetAddressDefault={setAddress}\n                                />\n                            </div>\n                            {FLAT_FORM === FLAT_FORM_TYPE.BEAUTYX && (\n                                <div\n                                    onClick={() => setOpen(true)}\n                                    className=\"re-cart-cnt__pmt\"\n                                >\n                                    <span>Phương thức thanh toán</span>\n                                    <br />\n                                    <span\n                                        style={{\n                                            backgroundColor: \"var(--pink-momo)\",\n                                            marginLeft: \"12px\",\n                                            padding: \"0px 8px\",\n                                            borderRadius: \"6px\",\n                                            color: \"var(--white)\"\n                                        }}\n                                    >\n                                        {pmtMethod\n                                            ? pmtMethod?.name_key\n                                            : \"Vui lòng chọn phương thức thanh toán\"}\n                                    </span>\n                                </div>\n                            )}\n                            <div className=\"re-cart-cnt__body\">\n                                <ul className=\"re-cart-cnt__body-list\">\n                                    {cartListGroupOrg.map(\n                                        (item: any, index: number) => (\n                                            <li\n                                                key={index}\n                                                className=\"re-cart-cnt__body__item\"\n                                            >\n                                                <CartGroupItem\n                                                    item={item}\n                                                    org={org}\n                                                    cartList={cartList}\n                                                    openBranch={openBranch}\n                                                    setOpenBranch={\n                                                        setOpenBranch\n                                                    }\n                                                />\n                                            </li>\n                                        )\n                                    )}\n                                </ul>\n                            </div>\n                        </div>\n                    </Container>\n                    <CartPaymentMethod\n                        open={open}\n                        setOpen={setOpen}\n                        pmtMethod={pmtMethod}\n                        setPmtMethod={setPmtMethod}\n                    />\n                    <div style={{ display: \"none\" }}>\n                        <PaymentMethodCpn\n                            e={pmtMethod}\n                            onPaymentMethodChange={setPmtMethod}\n                        />\n                    </div>\n                    <CartBottom DATA_CART={DATA_CART} DATA_PMT={DATA_PMT} />\n                    <BranchListOrgPay\n                        org={org}\n                        open={openBranch}\n                        setOpen={setOpenBranch}\n                    />\n                </>\n            )}\n        </>\n    );\n}\n\nexport default Carts;\n\nconst CartHeadRight = (props: any) => {\n    const { length, handleClearByCheck } = props;\n    return (\n        <div\n            onClick={handleClearByCheck}\n            className=\"flex-row re-cart-head-right\"\n        >\n            <span>Xóa({length})</span>\n            <img src={icon.TrashOrange} alt=\"\" />\n        </div>\n    );\n};\nconst BranchListOrgPay = (props: any) => {\n    const { open, setOpen } = props;\n    const org: IOrganization = props.org;\n    return (\n        <Dialog\n            open={open.open}\n            TransitionComponent={Transition}\n            onClose={() => setOpen({ ...open, open: false })}\n        >\n            <div className=\"re-cart-branches\">\n                <ul className=\"list\">\n                    <li\n                        onClick={() =>\n                            setOpen({ ...open, branch: null, open: false })\n                        }\n                        className=\"flex-row re-cart__branch-item\"\n                    >\n                        {!open.branch && (\n                            <span className=\"re-cart__branch-item-ck\">\n                                Đã chọn\n                            </span>\n                        )}\n                        <img\n                            onError={(e) => onErrorImg(e)}\n                            src={org?.image_url}\n                            alt=\"\"\n                            className=\"branch-img\"\n                        />\n                        <div className=\"detail\">\n                            <span className=\"branch-name\">{org?.name}</span>\n                            <span className=\"branch-address\">\n                                {org?.full_address}\n                            </span>\n                            <span className=\"branch-phone\">\n                                {org?.telephone?.join(\", \")}\n                            </span>\n                        </div>\n                    </li>\n                    {org?.branches?.map((item: IBranch, index: number) => (\n                        <li\n                            onClick={() =>\n                                setOpen({ ...open, branch: item, open: false })\n                            }\n                            key={index}\n                            className=\"flex-row re-cart__branch-item\"\n                        >\n                            {open.branch?.id === item?.id && (\n                                <span className=\"re-cart__branch-item-ck\">\n                                    Đã chọn\n                                </span>\n                            )}\n                            <img\n                                onError={(e) => onErrorImg(e)}\n                                src={\n                                    item?.image\n                                        ? item?.image_url\n                                        : org?.image_url\n                                }\n                                alt=\"\"\n                                className=\"branch-img\"\n                            />\n                            <div className=\"detail\">\n                                <span className=\"branch-name\">\n                                    {item?.name}\n                                </span>\n                                <span className=\"branch-address\">\n                                    {item?.full_address}\n                                </span>\n                                <span className=\"branch-phone\">\n                                    {item?.telephone}\n                                </span>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </Dialog>\n    );\n};\n"],"names":["props","t","useContext","AppContext","dispatch","useDispatch","status","useSelector","state","PAYMENT","PAYMENT_METHOD","e","onPaymentMethodChange","setOpen","value","setValue","useState","useEffect","STATUS","fetAsyncPaymentMethod","handleOnChange","useCallback","event","target","SectionTitle","title","RadioGroup","name","onChange","className","map","item","FormControlLabel","method","control","Radio","sx","color","label","src","img","alt","style","display","method_list","filter","name_key","onClick","console","log","onChoosePmtClick","backgroundColor","id","open","pmtMethod","setPmtMethod","IS_MB","useDeviceMobile","Drawer","onClose","anchor","initialMomoForBeautyx","created_at","is_changeable","updated_at","FLAT_FORM","EXTRA_FLAT_FORM","cartAmountDiscount","cartAmount","VOUCHER_APPLY","carts","USER","cartList","i","user_id","org","isConfirm","onClearApplyVoucher","async","values","org_id","res","fetchAsyncOrgDiscounts","discounts","payload","length","addVoucherByOrg","vouchers","IS_VOUCHER","callDiscountByOrg","cartConfirm","getTotal","address","setAddress","openBranch","setOpenBranch","branch","DATA_CART","orgs_id","cartListGroupOrg","arr","newArr","indexOf","push","unique","cartItemByOrg","org_name","items","payments_method","DATA_PMT","payment_method_id","extraPaymentMethodId","HeadTitle","HeadMobile","element","CartHeadRight","handleClearByCheck","clearByCheck","Head","Container","UserPaymentInfo","onSetAddressDefault","FLAT_FORM_TYPE","marginLeft","padding","borderRadius","index","CartGroupItem","CartBottom","BranchListOrgPay","icon","Dialog","TransitionComponent","Transition","onError","onErrorImg","image_url","full_address","telephone","join","branches","image"],"sourceRoot":""}