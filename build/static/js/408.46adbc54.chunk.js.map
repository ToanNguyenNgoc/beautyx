{"version":3,"file":"static/js/408.46adbc54.chunk.js","mappings":"uNACA,EAA0B,8BAA1B,EAAiE,6BAAjE,EAA6G,mCAA7G,EAAwJ,4BAAxJ,EAAuM,uCAAvM,EAA2P,iCAA3P,EAAuS,+B,4CC+HvS,MAlGA,WACI,MAAOA,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAC3B,EAAEC,IAAMC,EAAAA,EAAAA,MACR,KAAEC,EAAI,UAAEC,EAAS,QAAEC,IAAYC,EAAAA,EAAAA,GAAS,CAC1CC,SAAU,CAAC,uBAAwBT,GACnCU,QAASC,gBACaC,EAAAA,GAAYC,IAC1B,GAAGC,EAAAA,EAAQC,sCAAsCf,eAE1CK,KAAKA,KAAKW,QAEzBC,kBAAkB,IAWtB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAcC,SAAElB,EAAE,4BAEjCmB,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAoBC,UAChCH,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAaC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAAD,UACIH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAKlB,EAAE,iCACPmB,EAAAA,EAAAA,KAAA,MAAAD,SAAKlB,EAAE,6BACPmB,EAAAA,EAAAA,KAAA,MAAAD,SAAKlB,EAAE,+BACPmB,EAAAA,EAAAA,KAAA,MAAAD,SAAKlB,EAAE,kCAGfmB,EAAAA,EAAAA,KAAA,SAAAD,SACKf,GACGgB,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAIC,QAAS,EAAEF,SACVlB,EAAE,6BAGXI,GACAe,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAIC,QAAS,EAAEF,SACVlB,EAAE,mCAGP,OAAJE,QAAI,IAAJA,OAAI,EAAJA,EAAMA,KAAKmB,QAAS,EACpBnB,EAAKA,KAAKoB,KAAKC,IACXR,EAAAA,EAAAA,MAAA,MAAAG,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SACK,IAAIM,KACDD,EAAKE,WACPC,mBAAmB,YAEzBP,EAAAA,EAAAA,KAAA,MAAAD,SAAKK,EAAKI,mBACVR,EAAAA,EAAAA,KAAA,MAAAD,SAAKK,EAAKK,qBACVT,EAAAA,EAAAA,KAAA,MAAAD,SAAKK,EAAKM,uBARLN,EAAKO,QAYlBX,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAAA,MAAIC,QAAS,EAAEF,SAAElB,EAAE,+BAQtCE,GAAQA,EAAK6B,WAAa,IACvBhB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,UACIa,QA7DGC,KACfpC,EAAO,GAAGC,GAASoC,GAASA,EAAO,GAAE,EA6DzBC,SAAmB,IAATtC,EACVmB,UAAWC,EAAwBC,UAEnCC,EAAAA,EAAAA,KAAA,OAAKiB,IAAKC,EAAAA,EAAKC,gBAAiBC,IAAI,QAExCxB,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAgBC,SAAA,CACzBlB,EAAE,4BAA4B,IAAEH,EAAK,KAAG,IACxCK,EAAK6B,eAEVZ,EAAAA,EAAAA,KAAA,UACIa,QApEGQ,KACftC,GAAQL,EAAOK,EAAK6B,YAAYjC,GAASoC,GAASA,EAAO,GAAE,EAoE/CC,SAAUtC,IAASK,EAAK6B,WACxBf,UAAWC,EAAwBC,UAEnCC,EAAAA,EAAAA,KAAA,OAAKiB,IAAKC,EAAAA,EAAKI,iBAAkBF,IAAI,YAM7D,EC7HA,GAAgB,QAAU,2BAA2B,MAAQ,yBAAyB,UAAY,6BAA6B,KAAO,wBAAwB,SAAW,4BAA4B,YAAc,+BAA+B,SAAW,4BAA4B,KAAO,wBAAwB,UAAY,6BAA6B,MAAQ,yBAAyB,SAAW,4BAA4B,MAAQ,yBAAyB,UAAY,6BAA6B,WAAa,8BAA8B,aAAe,gCAAgC,YAAc,+BAA+B,iBAAmB,oCAAoC,aAAe,gCAAgC,aAAe,iC,0ECsB/uB,MAAMG,EAAoC,CACtCC,iBAAkB,GAClBC,eAAgB,GAChBC,MAAO,GACPC,QAAS,GACTC,MAAO,IAYEC,EACA9C,GACE+C,EAAAA,EAAMC,KACT,GAAGvC,EAAAA,EAAQC,gCACXV,EACA,CACIiD,QAAS,CAAE,eAAgB,sBAyX3C,MA7WA,WACI,MAAM,gBAAEC,EAAe,UAAEjD,IAAckD,EAAAA,EAAAA,OAChCC,EAAeC,IAAoBxD,EAAAA,EAAAA,UAA4B,KAChE,OAAEyD,IARDC,EAAAA,EAAAA,GAAY,CACfC,WAAaxD,GAAiC8C,EAAoB9C,MAQhE,EAAEF,IAAMC,EAAAA,EAAAA,KAER0D,EAAmBC,EAAAA,GAAW,CAChCjB,iBAAkBiB,EAAAA,KAAaC,SAC3B7D,EAAE,mDAEN4C,eAAgBgB,EAAAA,KAAaC,SACzB7D,EAAE,iDAEN6C,MAAOe,EAAAA,KACFf,MAAM7C,EAAE,sCACR6D,SAAS7D,EAAE,wCAChB8C,QAASc,EAAAA,KAAaC,SAClB7D,EAAE,0CAEN+C,MAAOa,EAAAA,KACFE,IAAI,EAAG9D,EAAE,mCACT6D,SAAS7D,EAAE,2CAGd,cACF+D,EAAa,UACbC,EAAS,iBACTC,EAAgB,mBAChBC,EAAkB,wBAClBC,IACAC,EAAAA,EAAAA,MAuEJ,OACIrD,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOoD,QAAQnD,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAOqD,MAAMpD,SAAElB,EAAE,8BAEhCe,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOsD,UAAUrD,SAAA,EAE7BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOuD,KAAKtD,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAKlB,EAAE,gCACPe,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAOwD,SAASvD,SAAA,EAC1BH,EAAAA,EAAAA,MAAA,UAAAG,SAAA,CAASlB,EAAE,yBAAyB,QACpCmB,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mBAGPH,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAOwD,SAASvD,SAAA,EAC1BH,EAAAA,EAAAA,MAAA,UAAAG,SAAA,CAAQ,gBAAIlB,EAAE,yBAAyB,QACvCmB,EAAAA,EAAAA,KAAA,KAAAD,SAAIlB,EAAE,qCAGVe,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAOwD,SAASvD,SAAA,EAC1BH,EAAAA,EAAAA,MAAA,UAAAG,SAAA,CAAQ,gBAAIlB,EAAE,uBAAuB,QACrCmB,EAAAA,EAAAA,KAAA,KAAAD,SAAIlB,EAAE,mCAGVe,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAOwD,SAASvD,SAAA,EAC1BH,EAAAA,EAAAA,MAAA,UAAAG,SAAA,CAAQ,gBAAIlB,EAAE,uBAAuB,QACrCmB,EAAAA,EAAAA,KAAA,KAAAD,SAAIlB,EAAE,uCAGde,EAAAA,EAAAA,MAAC2D,EAAAA,GAAuB,CACpBC,aAAcZ,EACda,YAAa,CACTpE,OAAO,EACPqE,OAAO,EACPC,SAAU,OACVC,WAAOC,GACT9D,SAAA,EAGFC,EAAAA,EAAAA,KAAC8D,EAAAA,GAAM,CACHvC,cAAeA,EACfiB,iBAAkBA,EAClBuB,SA/GC1E,MACjB2E,EAA0BC,KAExB,IADF,UAAEC,GAA8CD,EAIhD,GAFAlB,KAEKF,EAKD,YAJAsB,EAAAA,GAAcC,KAAK,CACfjB,MAAOtE,EAAE,0CACTwF,KAAM,YAKd,MAAMC,EAAa,CACf9D,gBAAiBwD,EAAOxC,iBACxBf,kBAAmBuD,EAAOvC,eAC1B8C,iBAAkBP,EAAOtC,MACzBhB,mBAAoBsD,EAAOrC,QAC3B6C,iBAAkBR,EAAOpC,MAAMzB,KAAKsE,GAASA,EAAKC,eAClD7B,UAAWA,GAAa,IAG5BR,EAAOiC,EAAY,CACfK,UAAWA,KACPR,EAAAA,GAAcC,KAAK,CACfjB,MAAOtE,EAAE,+BACTwF,KAAM,YAEVH,IACA9B,EAAiB,IACjBW,GAAoB,EAExB6B,QAAUC,IACNV,EAAAA,GAAcC,KAAK,CACfjB,MAAOtE,EAAE,6BACTwF,KAAM,UAEVS,QAAQD,MAAM,gBAAiBA,GAC/B9B,GAAoB,GAE1B,EAsEqChD,SAEtBgF,IAAA,IAAC,cAAEC,EAAa,OAAEhB,GAAQe,EAAA,OACvBnF,EAAAA,EAAAA,MAACqF,EAAAA,GAAI,CAACpF,UAAWC,EAAOoF,KAAKnF,SAAA,EAEzBH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOqF,UAAUpF,SAAA,EAC7BH,EAAAA,EAAAA,MAAA,SACIwF,QAAQ,mBACRvF,UAAWC,EAAOuF,MAAMtF,SAAA,CAEvBlB,EACG,wCAEJmB,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAO4C,SAAS3C,SAAC,UAItCC,EAAAA,EAAAA,KAACsF,EAAAA,GAAK,CACFC,GAAG,mBACHC,KAAK,mBACLnB,KAAK,OACLoB,YAAa5G,EACT,6CAEJgB,UAAWC,EAAO4F,SAEtB1F,EAAAA,EAAAA,KAAC2F,EAAAA,GAAY,CACTH,KAAK,mBACLI,UAAU,MACV/F,UAAWC,EAAO+E,YAI1BjF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOqF,UAAUpF,SAAA,EAC7BH,EAAAA,EAAAA,MAAA,SACIwF,QAAQ,iBACRvF,UAAWC,EAAOuF,MAAMtF,SAAA,CAEvBlB,EAAE,sCACHmB,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAO4C,SAAS3C,SAAC,UAItCC,EAAAA,EAAAA,KAACsF,EAAAA,GAAK,CACFC,GAAG,iBACHC,KAAK,iBACLnB,KAAK,OACLoB,YAAa5G,EACT,2CAEJgB,UAAWC,EAAO4F,SAEtB1F,EAAAA,EAAAA,KAAC2F,EAAAA,GAAY,CACTH,KAAK,iBACLI,UAAU,MACV/F,UAAWC,EAAO+E,YAI1BjF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOqF,UAAUpF,SAAA,EAC7BH,EAAAA,EAAAA,MAAA,SACIwF,QAAQ,QACRvF,UAAWC,EAAOuF,MAAMtF,SAAA,CAEvBlB,EAAE,6BACHmB,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAO4C,SAAS3C,SAAC,UAItCC,EAAAA,EAAAA,KAACsF,EAAAA,GAAK,CACFC,GAAG,QACHC,KAAK,QACLnB,KAAK,QACLoB,YAAa5G,EACT,kCAEJgB,UAAWC,EAAO4F,SAEtB1F,EAAAA,EAAAA,KAAC2F,EAAAA,GAAY,CACTH,KAAK,QACLI,UAAU,MACV/F,UAAWC,EAAO+E,YAI1BjF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOqF,UAAUpF,SAAA,EAC7BH,EAAAA,EAAAA,MAAA,SACIwF,QAAQ,UACRvF,UAAWC,EAAOuF,MAAMtF,SAAA,CAEvBlB,EAAE,+BACHmB,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAO4C,SAAS3C,SAAC,UAItCC,EAAAA,EAAAA,KAACsF,EAAAA,GAAK,CACFC,GAAG,UACHC,KAAK,UACLK,GAAG,WACHJ,YAAa5G,EACT,oCAEJiH,KAAM,EACNjG,UAAWC,EAAOiG,YAEtB/F,EAAAA,EAAAA,KAAC2F,EAAAA,GAAY,CACTH,KAAK,UACLI,UAAU,MACV/F,UAAWC,EAAO+E,YAK1BjF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOqF,UAAUpF,SAAA,EAC7BH,EAAAA,EAAAA,MAAA,SACIwF,QAAQ,QACRvF,UAAWC,EAAOuF,MAAMtF,SAAA,CAEvBlB,EAAE,oCACHmB,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAO4C,SAAS3C,SAAC,UAItCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAOkG,UAAUjG,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,SACIuF,GAAG,QACHC,KAAK,QACLnB,KAAK,OACL4B,OAAO,UACPC,UAAQ,EACRC,SAAWC,GArMzBC,EACtBD,EACApB,EACAsB,KAEArE,EAAgB,CACZsE,EAAGH,EACHI,SAAWC,IACP,MAAMC,EAAgB,IAAIJ,KAAkBG,GAC5CzB,EAAc,QAAS0B,GACvBtE,EAAiBsE,EAAc,GAErC,EA0LsCL,CACID,EACApB,EACAhB,EAAOpC,OAGf/B,UAAWC,EAAO6G,eAEtB3G,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAO8G,WAAW7G,UAC/BC,EAAAA,EAAAA,KAAA,OACIiB,IAAKC,EAAAA,EAAK2F,OACVzF,IAAKvC,EACD,mCAEJgB,UAAWC,EAAOgH,mBAI9B9G,EAAAA,EAAAA,KAAC2F,EAAAA,GAAY,CACTH,KAAK,QACLI,UAAU,MACV/F,UAAWC,EAAO+E,WAKzB1C,EAAcjC,OAAS,IACpBF,EAAAA,EAAAA,KAAA+G,EAAAA,SAAA,CAAAhH,UACIC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAOkH,YAAYjH,SAC9BoC,EAAchC,KACX,CAAC8G,EAAOC,KACJtH,EAAAA,EAAAA,MAAA,OAEIC,UACIC,EAAOqH,iBACVpH,SAAA,EAEDC,EAAAA,EAAAA,KAAA,OACIiB,IACIgG,EAAMvC,aAEVtD,IAAK,WAAW8F,IAChBrH,UACIC,EAAOsH,gBAGfpH,EAAAA,EAAAA,KAAA,UACIqE,KAAK,SACLxE,UACIC,EAAOuH,aAEXrG,SAAUhC,EACV6B,QAASA,IA3O7CyG,EAChBJ,EACAlC,EACAsB,KAEA,MAAMI,EAAgB,IAAIJ,GAC1BI,EAAca,OAAOL,EAAO,GAC5BlC,EAAc,QAAS0B,GACvBtE,EAAiBsE,EAAc,EAoOyBY,CACIJ,EACAlC,EACAhB,EAAOpC,OAEd7B,UAEDC,EAAAA,EAAAA,KAAA,OACIiB,IACIC,EAAAA,EAAKsG,WAETpG,IAAI,SAhCP8F,UA0C7BlH,EAAAA,EAAAA,KAACyH,EAAAA,GAAO,CACJpD,KAAK,SACLxE,UAAWC,EAAO4H,aAClBC,QAAS3I,EACTmE,MAAOtE,EAAE,kCAEV,KAGfmB,EAAAA,EAAAA,KAAC4H,EAAAA,GAAe,CACZ9E,iBAAkBA,EAClB+E,SAAU7E,YAMlC,ECvZA,MAVA,WACI,MAEM8E,GAFWC,EAAAA,EAAAA,MAEWC,SAASC,SAAS,SAE9C,OACIjI,EAAAA,EAAAA,KAACkI,EAAAA,EAAS,CAAAnI,SAAE+H,GAAa9H,EAAAA,EAAAA,KAACmI,EAAW,KAAMnI,EAAAA,EAAAA,KAACoI,EAAS,KAE7D,C","sources":["webpack://web-booking/./src/pages/ReflectSocialOrganization/components/ListReflect/list-reflect.module.css?83a3","pages/ReflectSocialOrganization/components/ListReflect/index.tsx","webpack://web-booking/./src/pages/ReflectSocialOrganization/components/Reception/reception.module.css?69c1","pages/ReflectSocialOrganization/components/Reception/index.tsx","pages/ReflectSocialOrganization/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"list-reflect_wrapper__r-TCG\",\"header\":\"list-reflect_header__S8msS\",\"tableWrapper\":\"list-reflect_tableWrapper__E0cW4\",\"table\":\"list-reflect_table__rzGP+\",\"paginationButton\":\"list-reflect_paginationButton__X+MHg\",\"pagination\":\"list-reflect_pagination__MoTKW\",\"pageInfo\":\"list-reflect_pageInfo__+BaG9\"};","import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { axiosClient } from \"config\";\nimport styles from \"./list-reflect.module.css\";\nimport icon from \"constants/icon\";\nimport API_3RD from \"api/3rd-api\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface OrgSocialItem {\n    _id: string;\n    org_social_name: string;\n    org_social_number: string;\n    org_social_email: string;\n    org_social_content: string;\n    org_social_files: string;\n    createdAt: string;\n    updatedAt: string;\n}\n\ninterface ApiResponse {\n    data: {\n        context: {\n            data: OrgSocialItem[];\n            total_page: number;\n            total: number;\n            current_page: number;\n        };\n    };\n}\n\nfunction ListReflect() {\n    const [page, setPage] = useState(1);\n    const { t } = useTranslation();\n    const { data, isLoading, isError } = useQuery({\n        queryKey: [\"feedback-org-socials\", page],\n        queryFn: async () => {\n            const res = await axiosClient.get<ApiResponse>(\n                `${API_3RD.API_NODE}/feedback-org-socials?page=${page}&limit=15`\n            );\n            return res.data.data.context;\n        },\n        keepPreviousData: true,\n    });\n\n    const handlePrevPage = () => {\n        if (page > 1) setPage((prev) => prev - 1);\n    };\n\n    const handleNextPage = () => {\n        if (data && page < data.total_page) setPage((prev) => prev + 1);\n    };\n\n    return (\n        <div className={styles.wrapper}>\n            <h1 className={styles.header}>{t(\"reception.headerTitle\")}</h1>\n\n            <div className={styles.tableWrapper}>\n                <table className={styles.table}>\n                    <thead>\n                        <tr>\n                            <th>{t(\"reception.theadCreatedDate\")}</th>\n                            <th>{t(\"reception.theadOrgName\")}</th>\n                            <th>{t(\"reception.theadOrgNumber\")}</th>\n                            <th>{t(\"reception.theadContent\")}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {isLoading ? (\n                            <tr>\n                                <td colSpan={4}>\n                                    {t(\"reception.loadingData\")}\n                                </td>\n                            </tr>\n                        ) : isError ? (\n                            <tr>\n                                <td colSpan={4}>\n                                    {t(\"reception.errorLoadingData\")}\n                                </td>\n                            </tr>\n                        ) : data?.data.length > 0 ? (\n                            data.data.map((item) => (\n                                <tr key={item._id}>\n                                    <td>\n                                        {new Date(\n                                            item.createdAt\n                                        ).toLocaleDateString(\"vi-VN\")}\n                                    </td>\n                                    <td>{item.org_social_name}</td>\n                                    <td>{item.org_social_number}</td>\n                                    <td>{item.org_social_content}</td>\n                                </tr>\n                            ))\n                        ) : (\n                            <tr>\n                                <td colSpan={4}>{t(\"reception.noData\")}</td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n            </div>\n\n            {/* Pagination Buttons */}\n            {data && data.total_page > 1 && (\n                <div className={styles.pagination}>\n                    <button\n                        onClick={handlePrevPage}\n                        disabled={page === 1}\n                        className={styles.paginationButton}\n                    >\n                        <img src={icon.arrownLeftWhite} alt=\"\" />\n                    </button>\n                    <p className={styles.pageInfo}>\n                        {t(\"reception.paginationPage\")} {page} /{\" \"}\n                        {data.total_page}\n                    </p>\n                    <button\n                        onClick={handleNextPage}\n                        disabled={page === data.total_page}\n                        className={styles.paginationButton}\n                    >\n                        <img src={icon.arrownRightWhite} alt=\"\" />\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ListReflect;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"reception_wrapper__L0S44\",\"title\":\"reception_title__Gzalp\",\"container\":\"reception_container__bpDwg\",\"info\":\"reception_info__NAsym\",\"infoText\":\"reception_infoText__Qfgil\",\"socialIcons\":\"reception_socialIcons__4ll0o\",\"required\":\"reception_required__bY4rF\",\"form\":\"reception_form__32y0-\",\"formGroup\":\"reception_formGroup__6LbFa\",\"input\":\"reception_input__98I3G\",\"textarea\":\"reception_textarea__CLL32\",\"error\":\"reception_error__laerK\",\"uploadBox\":\"reception_uploadBox__8gqOU\",\"uploadText\":\"reception_uploadText__duU6V\",\"submitButton\":\"reception_submitButton__Fa3gm\",\"previewList\":\"reception_previewList__CGyFN\",\"previewContainer\":\"reception_previewContainer__yzEKs\",\"previewImage\":\"reception_previewImage__phfXH\",\"removeButton\":\"reception_removeButton__vK5P0\"};","import icon from \"constants/icon\";\nimport styles from \"./reception.module.css\";\nimport { Formik, Form, Field, ErrorMessage, FormikHelpers } from \"formik\";\nimport { useRecaptcha,MediaThirdParty, usePostMediaThirdParty } from \"hooks\";\nimport { useState } from \"react\";\nimport * as Yup from \"yup\";\nimport { AlertAppSnack, XButton } from \"components/Layout\";\nimport API_3RD from \"api/3rd-api\";\nimport {\n    GoogleReCaptcha,\n    GoogleReCaptchaProvider,\n} from \"react-google-recaptcha-v3\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { useTranslation } from \"react-i18next\";\nimport axios from \"axios\";\ninterface FeedbackFormValues {\n    organizationName: string;\n    decisionNumber: string;\n    email: string;\n    content: string;\n    files: MediaThirdParty[];\n}\n\nconst initialValues: FeedbackFormValues = {\n    organizationName: \"\",\n    decisionNumber: \"\",\n    email: \"\",\n    content: \"\",\n    files: [],\n};\n\nexport interface FeedbackOrgSocialInput {\n    org_social_name: string;\n    org_social_number: string;\n    org_social_email: string;\n    org_social_content: string;\n    org_social_files: string[];\n    recaptcha: string;\n}\n\nexport const receptionApi = {\n    create: (data: FeedbackOrgSocialInput) => {\n        return axios.post(\n            `${API_3RD.API_NODE}/feedback-org-socials`,\n            data,\n            {\n                headers: { \"Content-Type\": \"application/json\" },\n            }\n        );\n    },\n};\n\nexport function useFeedbackOrgSocial() {\n    return useMutation({\n        mutationFn: (data: FeedbackOrgSocialInput) => receptionApi.create(data),\n    });\n}\n\nfunction Reception() {\n    const { handlePostMedia, isLoading } = usePostMediaThirdParty();\n    const [previewImages, setPreviewImages] = useState<MediaThirdParty[]>([]);\n    const { mutate } = useFeedbackOrgSocial();\n    const { t } = useTranslation();\n\n    const validationSchema = Yup.object({\n        organizationName: Yup.string().required(\n            t(\"receptionList.validateOrganizationNameRequired\")\n        ),\n        decisionNumber: Yup.string().required(\n            t(\"receptionList.validateDecisionNumberRequired\")\n        ),\n        email: Yup.string()\n            .email(t(\"receptionList.validateEmailFormat\"))\n            .required(t(\"receptionList.validateEmailRequired\")),\n        content: Yup.string().required(\n            t(\"receptionList.validateContentRequired\")\n        ),\n        files: Yup.array()\n            .min(1, t(\"receptionList.validateFilesMin\"))\n            .required(t(\"receptionList.validateFilesRequired\")),\n    });\n\n    const {\n        recaptcha_key,\n        recaptcha,\n        refreshReCaptcha,\n        onRefreshRecaptcha,\n        verifyRecaptchaCallback,\n    } = useRecaptcha();\n    const handleSubmit = async (\n        values: FeedbackFormValues,\n        { resetForm }: FormikHelpers<FeedbackFormValues>\n    ) => {\n        onRefreshRecaptcha();\n\n        if (!recaptcha) {\n            AlertAppSnack.open({\n                title: t(\"receptionList.validateRecaptchaWarning\"),\n                type: \"warning\",\n            });\n            return;\n        }\n\n        const customData = {\n            org_social_name: values.organizationName,\n            org_social_number: values.decisionNumber,\n            org_social_email: values.email,\n            org_social_content: values.content,\n            org_social_files: values.files.map((file) => file.original_url),\n            recaptcha: recaptcha || \"\",\n        };\n\n        mutate(customData, {\n            onSuccess: () => {\n                AlertAppSnack.open({\n                    title: t(\"receptionList.submitSuccess\"),\n                    type: \"success\",\n                });\n                resetForm();\n                setPreviewImages([]);\n                onRefreshRecaptcha();\n            },\n            onError: (error) => {\n                AlertAppSnack.open({\n                    title: t(\"receptionList.submitError\"),\n                    type: \"error\",\n                });\n                console.error(\"Submit error:\", error);\n                onRefreshRecaptcha();\n            },\n        });\n    };\n\n    const handleFilesChange = (\n        event: React.ChangeEvent<HTMLInputElement>,\n        setFieldValue: any,\n        currentMedias: MediaThirdParty[]\n    ) => {\n        handlePostMedia({\n            e: event,\n            callBack: (newMedias) => {\n                const updatedMedias = [...currentMedias, ...newMedias];\n                setFieldValue(\"files\", updatedMedias);\n                setPreviewImages(updatedMedias);\n            },\n        });\n    };\n\n    const removeImage = (\n        index: number,\n        setFieldValue: any,\n        currentMedias: MediaThirdParty[]\n    ) => {\n        const updatedMedias = [...currentMedias];\n        updatedMedias.splice(index, 1);\n        setFieldValue(\"files\", updatedMedias);\n        setPreviewImages(updatedMedias);\n    };\n\n    return (\n        <div className={styles.wrapper}>\n            <h2 className={styles.title}>{t(\"receptionList.pageTitle\")}</h2>\n\n            <div className={styles.container}>\n                {/* Company Info */}\n                <div className={styles.info}>\n                    <h4>{t(\"receptionList.companyName\")}</h4>\n                    <p className={styles.infoText}>\n                        <strong>{t(\"receptionList.taxCode\")}:</strong>\n                        <p>0110721653</p>\n                    </p>\n\n                    <p className={styles.infoText}>\n                        <strong>📍 {t(\"receptionList.address\")}:</strong>\n                        <p>{t(\"receptionList.addressDetail\")}</p>\n                    </p>\n\n                    <p className={styles.infoText}>\n                        <strong>📞 {t(\"receptionList.phone\")}:</strong>\n                        <p>{t(\"receptionList.phoneNumber\")}</p>\n                    </p>\n\n                    <p className={styles.infoText}>\n                        <strong>📧 {t(\"receptionList.email\")}:</strong>\n                        <p>{t(\"receptionList.emailAddress\")}</p>\n                    </p>\n                </div>\n                <GoogleReCaptchaProvider\n                    reCaptchaKey={recaptcha_key}\n                    scriptProps={{\n                        async: true,\n                        defer: true,\n                        appendTo: \"head\",\n                        nonce: undefined,\n                    }}\n                >\n                    {/* Feedback Form */}\n                    <Formik<FeedbackFormValues>\n                        initialValues={initialValues}\n                        validationSchema={validationSchema}\n                        onSubmit={handleSubmit}\n                    >\n                        {({ setFieldValue, values }) => (\n                            <Form className={styles.form}>\n                                {/* Input fields */}\n                                <div className={styles.formGroup}>\n                                    <label\n                                        htmlFor=\"organizationName\"\n                                        className={styles.label}\n                                    >\n                                        {t(\n                                            \"receptionList.fieldOrganizationName\"\n                                        )}\n                                        <span className={styles.required}>\n                                            *\n                                        </span>\n                                    </label>\n                                    <Field\n                                        id=\"organizationName\"\n                                        name=\"organizationName\"\n                                        type=\"text\"\n                                        placeholder={t(\n                                            \"receptionList.placeholderOrganizationName\"\n                                        )}\n                                        className={styles.input}\n                                    />\n                                    <ErrorMessage\n                                        name=\"organizationName\"\n                                        component=\"div\"\n                                        className={styles.error}\n                                    />\n                                </div>\n\n                                <div className={styles.formGroup}>\n                                    <label\n                                        htmlFor=\"decisionNumber\"\n                                        className={styles.label}\n                                    >\n                                        {t(\"receptionList.fieldDecisionNumber\")}\n                                        <span className={styles.required}>\n                                            *\n                                        </span>\n                                    </label>\n                                    <Field\n                                        id=\"decisionNumber\"\n                                        name=\"decisionNumber\"\n                                        type=\"text\"\n                                        placeholder={t(\n                                            \"receptionList.placeholderDecisionNumber\"\n                                        )}\n                                        className={styles.input}\n                                    />\n                                    <ErrorMessage\n                                        name=\"decisionNumber\"\n                                        component=\"div\"\n                                        className={styles.error}\n                                    />\n                                </div>\n\n                                <div className={styles.formGroup}>\n                                    <label\n                                        htmlFor=\"email\"\n                                        className={styles.label}\n                                    >\n                                        {t(\"receptionList.fieldEmail\")}\n                                        <span className={styles.required}>\n                                            *\n                                        </span>\n                                    </label>\n                                    <Field\n                                        id=\"email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        placeholder={t(\n                                            \"receptionList.placeholderEmail\"\n                                        )}\n                                        className={styles.input}\n                                    />\n                                    <ErrorMessage\n                                        name=\"email\"\n                                        component=\"div\"\n                                        className={styles.error}\n                                    />\n                                </div>\n\n                                <div className={styles.formGroup}>\n                                    <label\n                                        htmlFor=\"content\"\n                                        className={styles.label}\n                                    >\n                                        {t(\"receptionList.fieldContent\")}\n                                        <span className={styles.required}>\n                                            *\n                                        </span>\n                                    </label>\n                                    <Field\n                                        id=\"content\"\n                                        name=\"content\"\n                                        as=\"textarea\"\n                                        placeholder={t(\n                                            \"receptionList.placeholderContent\"\n                                        )}\n                                        rows={5}\n                                        className={styles.textarea}\n                                    />\n                                    <ErrorMessage\n                                        name=\"content\"\n                                        component=\"div\"\n                                        className={styles.error}\n                                    />\n                                </div>\n\n                                {/* Upload images */}\n                                <div className={styles.formGroup}>\n                                    <label\n                                        htmlFor=\"files\"\n                                        className={styles.label}\n                                    >\n                                        {t(\"receptionList.fieldAttachImages\")}\n                                        <span className={styles.required}>\n                                            *\n                                        </span>\n                                    </label>\n                                    <div className={styles.uploadBox}>\n                                        <input\n                                            id=\"files\"\n                                            name=\"files\"\n                                            type=\"file\"\n                                            accept=\"image/*\"\n                                            multiple\n                                            onChange={(event) =>\n                                                handleFilesChange(\n                                                    event,\n                                                    setFieldValue,\n                                                    values.files\n                                                )\n                                            }\n                                            className={styles.uploadInput}\n                                        />\n                                        <span className={styles.uploadText}>\n                                            <img\n                                                src={icon.addImg}\n                                                alt={t(\n                                                    \"receptionList.uploadPlaceholder\"\n                                                )}\n                                                className={styles.uploadIcon}\n                                            />\n                                        </span>\n                                    </div>\n                                    <ErrorMessage\n                                        name=\"files\"\n                                        component=\"div\"\n                                        className={styles.error}\n                                    />\n                                </div>\n\n                                {/* Preview multiple images */}\n                                {previewImages.length > 0 && (\n                                    <>\n                                        <div className={styles.previewList}>\n                                            {previewImages.map(\n                                                (media, index) => (\n                                                    <div\n                                                        key={index}\n                                                        className={\n                                                            styles.previewContainer\n                                                        }\n                                                    >\n                                                        <img\n                                                            src={\n                                                                media.original_url\n                                                            }\n                                                            alt={`preview-${index}`}\n                                                            className={\n                                                                styles.previewImage\n                                                            }\n                                                        />\n                                                        <button\n                                                            type=\"button\"\n                                                            className={\n                                                                styles.removeButton\n                                                            }\n                                                            disabled={isLoading}\n                                                            onClick={() =>\n                                                                removeImage(\n                                                                    index,\n                                                                    setFieldValue,\n                                                                    values.files\n                                                                )\n                                                            }\n                                                        >\n                                                            <img\n                                                                src={\n                                                                    icon.xCircleRed\n                                                                }\n                                                                alt=\"\"\n                                                            />\n                                                        </button>\n                                                    </div>\n                                                )\n                                            )}\n                                        </div>\n                                    </>\n                                )}\n\n                                <XButton\n                                    type=\"submit\"\n                                    className={styles.submitButton}\n                                    loading={isLoading}\n                                    title={t(\"receptionList.submitButton\")}\n                                />\n                            </Form>\n                        )}\n                    </Formik>\n                    <GoogleReCaptcha\n                        refreshReCaptcha={refreshReCaptcha}\n                        onVerify={verifyRecaptchaCallback}\n                    />\n                </GoogleReCaptchaProvider>\n            </div>\n        </div>\n    );\n}\nexport default Reception;\n","import { Container } from \"@mui/material\";\nimport { useLocation } from \"react-router-dom\";\nimport ListReflect from \"pages/ReflectSocialOrganization/components/ListReflect\";\nimport Reception from \"pages/ReflectSocialOrganization/components/Reception\";\n\nfunction ReflectSocialOrganization() {\n    const location = useLocation(); \n\n    const isListPage = location.pathname.endsWith(\"/list\");\n\n    return (\n        <Container>{isListPage ? <ListReflect /> : <Reception />}</Container>\n    );\n}\n\nexport default ReflectSocialOrganization;\n"],"names":["page","setPage","useState","t","useTranslation","data","isLoading","isError","useQuery","queryKey","queryFn","async","axiosClient","get","API_3RD","API_NODE","context","keepPreviousData","_jsxs","className","styles","children","_jsx","colSpan","length","map","item","Date","createdAt","toLocaleDateString","org_social_name","org_social_number","org_social_content","_id","total_page","onClick","handlePrevPage","prev","disabled","src","icon","arrownLeftWhite","alt","handleNextPage","arrownRightWhite","initialValues","organizationName","decisionNumber","email","content","files","receptionApi","axios","post","headers","handlePostMedia","usePostMediaThirdParty","previewImages","setPreviewImages","mutate","useMutation","mutationFn","validationSchema","Yup","required","min","recaptcha_key","recaptcha","refreshReCaptcha","onRefreshRecaptcha","verifyRecaptchaCallback","useRecaptcha","wrapper","title","container","info","infoText","GoogleReCaptchaProvider","reCaptchaKey","scriptProps","defer","appendTo","nonce","undefined","Formik","onSubmit","values","_ref","resetForm","AlertAppSnack","open","type","customData","org_social_email","org_social_files","file","original_url","onSuccess","onError","error","console","_ref2","setFieldValue","Form","form","formGroup","htmlFor","label","Field","id","name","placeholder","input","ErrorMessage","component","as","rows","textarea","uploadBox","accept","multiple","onChange","event","handleFilesChange","currentMedias","e","callBack","newMedias","updatedMedias","uploadInput","uploadText","addImg","uploadIcon","_Fragment","previewList","media","index","previewContainer","previewImage","removeButton","removeImage","splice","xCircleRed","XButton","submitButton","loading","GoogleReCaptcha","onVerify","isListPage","useLocation","pathname","endsWith","Container","ListReflect","Reception"],"sourceRoot":""}