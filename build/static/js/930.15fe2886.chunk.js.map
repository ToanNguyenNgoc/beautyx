{"version":3,"file":"static/js/930.15fe2886.chunk.js","mappings":"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","sources":["webpack://web-booking/./src/pages/TrendsDetail/trend-detail.module.css?8158","pages/TrendsDetail/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"back_btn\":\"trend-detail_back_btn__cAjmb\",\"container\":\"trend-detail_container__LW5aw\",\"left\":\"trend-detail_left__zkPEH\",\"video_container\":\"trend-detail_video_container__NJTaI\",\"video_blur\":\"trend-detail_video_blur__BJ7VA\",\"video_wrapper\":\"trend-detail_video_wrapper__16p74\",\"video\":\"trend-detail_video__UtiV1\",\"right\":\"trend-detail_right__zzi54\",\"right_top\":\"trend-detail_right_top__s6Pbt\",\"right_top_org\":\"trend-detail_right_top_org__W77YF\",\"org_detail\":\"trend-detail_org_detail__NhzaH\",\"org_detail_img\":\"trend-detail_org_detail_img__tYN5Z\",\"org_detail_right\":\"trend-detail_org_detail_right__PcIwP\",\"org_detail_name\":\"trend-detail_org_detail_name__iZmAq\",\"time_late\":\"trend-detail_time_late__lC1tj\",\"right_top_org_btn\":\"trend-detail_right_top_org_btn__mjg6i\",\"org_btn_act\":\"trend-detail_org_btn_act__i2LnH\",\"title\":\"trend-detail_title__2lUzd\",\"content\":\"trend-detail_content__tKhqX\",\"right_top_services\":\"trend-detail_right_top_services__ruvvm\",\"service_link_text\":\"trend-detail_service_link_text__AU6Dx\",\"interactive\":\"trend-detail_interactive__pKqNC\",\"interactive_item\":\"trend-detail_interactive_item__z49BQ\",\"interactive_icon_btn\":\"trend-detail_interactive_icon_btn__8ItPJ\",\"interactive_item_text\":\"trend-detail_interactive_item_text__jwUkK\",\"comment_container\":\"trend-detail_comment_container__fcxFH\",\"comment_list\":\"trend-detail_comment_list__rx5JH\",\"comment_item_cnt\":\"trend-detail_comment_item_cnt__-K1Rg\",\"comment_item_par\":\"trend-detail_comment_item_par__C4g1p\",\"comment_user_avatar\":\"trend-detail_comment_user_avatar__xmqjw\",\"comment_item_par_right\":\"trend-detail_comment_item_par_right__RXhjR\",\"comment_item_box\":\"trend-detail_comment_item_box__cXnYc\",\"comment_text\":\"trend-detail_comment_text__lrFWT\",\"comment_user_name\":\"trend-detail_comment_user_name__QaZjT\",\"comment_bot\":\"trend-detail_comment_bot__sSat5\",\"comment_bot_create\":\"trend-detail_comment_bot_create__zNGBX\",\"comment_bot_reply\":\"trend-detail_comment_bot_reply__ueWEn\",\"comment_item_child\":\"trend-detail_comment_item_child__grHQ+\",\"comment_item_child_item\":\"trend-detail_comment_item_child_item__ZN2fE\",\"comment_input\":\"trend-detail_comment_input__YOZCG\",\"comment_input_cnt\":\"trend-detail_comment_input_cnt__Aq9mC\",\"comment_input_wrap\":\"trend-detail_comment_input_wrap__pn1bC\",\"comment_input_par\":\"trend-detail_comment_input_par__lCxpM\",\"comment_img_thumb\":\"trend-detail_comment_img_thumb__yCjAm\",\"img_thumb_list\":\"trend-detail_img_thumb_list__f5BgQ\",\"img_thumb_list_item\":\"trend-detail_img_thumb_list_item__mCfTJ\",\"img_thumb_item\":\"trend-detail_img_thumb_item__p5tKG\",\"comment_input_child\":\"trend-detail_comment_input_child__HE4ot\",\"comment_input_ctrl\":\"trend-detail_comment_input_ctrl__LYZ1H\",\"comment_btn\":\"trend-detail_comment_btn__CLVZS\",\"detail_comment_list\":\"trend-detail_detail_comment_list__Iz0Jf\",\"load_item\":\"trend-detail_load_item__UZLN5\",\"load_item_left\":\"trend-detail_load_item_left__5Lf8c\",\"load_item_right\":\"trend-detail_load_item_right__aUnBa\",\"comment_item_images\":\"trend-detail_comment_item_images__6Umg+\",\"comment_item_image\":\"trend-detail_comment_item_image__eM+DV\",\"comment_item_image_cnt\":\"trend-detail_comment_item_image_cnt__yjLz6\"};","import API_3RD from 'api/3rd-api';\nimport { Input, XButton, XButtonFile } from 'components/Layout';\nimport icon from 'constants/icon';\nimport { useComment, useFavorite, useFetch, useFetchInfinite, useSwr } from 'hooks';\nimport { ITrend } from 'pages/Trends/trend.interface';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport {\n    formatRouterLinkOrg,\n    formatRouterLinkService\n} from 'utils/formatRouterLink/formatRouter';\nimport style from './trend-detail.module.css'\nimport Skeleton from 'react-loading-skeleton';\nimport { ITrendComment, ITrendCommentChild } from './interface';\nimport { formatDateFromNow, onErrorImg } from 'utils';\nimport { IOrganization } from 'interface';\nimport API_ROUTE from 'api/_api';\nimport { useSelector } from 'react-redux';\nimport IStore from 'interface/IStore';\nimport { postMediaMulti } from 'hooks'\nimport { useRef, useState } from 'react';\nimport { ParamComment } from 'params-query/param.interface';\nimport { paramsComment } from 'params-query';\n\nfunction TrendsDetail({ id, onClose }: { id?: string, onClose?: () => void }) {\n    const params = useParams()\n    const trend_id = id ?? params?.id\n    const history = useHistory()\n    const trend: ITrend = useFetch(\n        trend_id,\n        `${API_3RD.API_NODE}/trends/${trend_id}`,\n        { 'include': 'services|tiktok' }\n    ).response?.context\n    const org: IOrganization = useSwr(\n        API_ROUTE.ORG(trend?.organization_id),\n        trend?.organization_id\n    ).response\n    const { onToggleFavorite, favoriteSt } = useFavorite({\n        org_id: org?.id,\n        type: 'ORG',\n        count: org?.favorites_count,\n        favorite: org?.is_favorite\n    })\n    const { resData, totalItem, isValidating } = useFetchInfinite(\n        trend_id,\n        `${API_3RD.API_NODE}/tiktok/getCommentsByUrl`,\n        { 'filter[trend]': trend_id }\n    )\n    const commentsTrend = resData ?? []\n    const param: ParamComment = {\n        ...paramsComment,\n        \"filter[commentable_type]\": \"ORGANIZATION\",\n        \"filter[commentable_id]\": org?.id,\n        \"limit\": 10\n    }\n    const { comments, loadPost, postComment, totalComment } = useComment(param)\n\n    const onOrgDetail = () => history.push(formatRouterLinkOrg(org?.subdomain ?? trend?.organization_id))\n    const onBack = () => {\n        if (onClose) {\n            onClose()\n        } else {\n            history.goBack()\n        }\n    }\n\n    return (\n        trend ?\n            <div className={style.container} >\n                <XButton\n                    onClick={onBack}\n                    className={style.back_btn}\n                    icon={icon.backWhite}\n                    iconSize={24}\n                />\n                <div className={style.left}>\n                    <div className={style.video_container}>\n                        <video className={style.video_blur} src={`${trend.media_url}#t=0.001`}></video>\n                        <div className={style.video_wrapper}>\n                            <video\n                                className={style.video}\n                                loop\n                                controls\n                                webkit-playsinline=\"webkit-playsinline\"\n                                playsInline={true}\n                            >\n                                <source type='video/mp4' src={`${trend.media_url}#t=0.001`} />\n                            </video>\n                        </div>\n                    </div>\n                </div>\n                <div className={style.right}>\n                    <div className={style.right_top}>\n                        <div className={style.right_top_org}>\n                            <div onClick={onOrgDetail} className={style.org_detail}>\n                                <div className={style.org_detail_img}>\n                                    <img src={trend.organization_image} alt=\"\" />\n                                </div>\n                                <div className={style.org_detail_right}>\n                                    <p className={style.org_detail_name}>{trend.organization_name}</p>\n                                    <p className={style.time_late}>\n                                        {formatDateFromNow(trend.createdAt)}\n                                    </p>\n                                </div>\n                            </div>\n                            <XButton\n                                onClick={onToggleFavorite}\n                                className={\n                                    favoriteSt.is_favorite ? style.right_top_org_btn : style.org_btn_act\n                                }\n                                title={favoriteSt.is_favorite ? 'Đang theo dõi' : 'Theo dõi'}\n                            />\n                        </div>\n                        <div className={style.right_top_content}>\n                            <p className={style.title}>{trend.title}</p>\n                            <p className={style.content}>{trend.content}</p>\n                        </div>\n                        <div className={style.right_top_services}>\n                            {\n                                trend.services?.map(service => (\n                                    <Link\n                                        key={service.id}\n                                        to={{\n                                            pathname: formatRouterLinkService(\n                                                service.id,\n                                                trend.organization_id,\n                                                service.service_name\n                                            )\n                                        }}\n                                    >\n                                        <span className={style.service_link_text}>\n                                            #{service.service_name}\n                                        </span>\n                                    </Link>\n                                ))\n                            }\n                        </div>\n                        <div className={style.interactive}>\n                            <div className={style.interactive_item}>\n                                <XButton\n                                    iconSize={16}\n                                    className={style.interactive_icon_btn}\n                                    icon={icon.eyeBoldBlack}\n                                />\n                                <span className={style.interactive_item_text}>{trend?.tiktok?.play_count}</span>\n                            </div>\n                            <div className={style.interactive_item}>\n                                <XButton\n                                    iconSize={16}\n                                    className={style.interactive_icon_btn}\n                                    onClick={onToggleFavorite}\n                                    icon={favoriteSt.is_favorite ? icon.heartBoldRed : icon.heartBoldBlack}\n                                />\n                                <span className={style.interactive_item_text}>\n                                    {trend?.tiktok?.digg_count + (favoriteSt.favorite_count ?? 0)}\n                                </span>\n                            </div>\n                            <div className={style.interactive_item}>\n                                <XButton\n                                    iconSize={16}\n                                    className={style.interactive_icon_btn}\n                                    icon={icon.commentBoldBlack}\n                                />\n                                <span className={style.interactive_item_text}>\n                                    {trend?.tiktok?.comment_count + totalComment}\n                                </span>\n                            </div>\n                            <div className={style.interactive_item}>\n                                <XButton\n                                    iconSize={16}\n                                    className={style.interactive_icon_btn}\n                                    icon={icon.shareBoldBlack}\n                                />\n                                <span className={style.interactive_item_text}>{trend?.tiktok?.share_count}</span>\n                            </div>\n                        </div>\n                    </div>\n                    {totalItem === 1 && isValidating && <LoadComment />}\n                    {resData &&\n                        <TrendsDetailComment\n                            org_id={trend.organization_id}\n                            comments={[...comments, ...commentsTrend]}\n                            postComment={postComment}\n                            loadPost={loadPost}\n                        />}\n                </div>\n            </div>\n            :\n            <></>\n    );\n}\n\nexport default TrendsDetail;\n\ninterface InitialBody {\n    commentable_type: string,\n    commentable_id: number | string,\n    organization_id: number | string,\n    models: Model[]\n    body: string\n}\ninterface TrendsDetailCommentProps {\n    comments: ITrendComment[],\n    org_id: string | number,\n    postComment: (body?: any) => void,\n    loadPost: boolean\n}\ninterface Model { model_id: number, original_url: string }\n\n\n\nconst TrendsDetailComment = (props: TrendsDetailCommentProps) => {\n    const { loadPost, postComment } = props\n    const org_id = props.org_id\n    const refCommentCnt = useRef<HTMLUListElement>(null)\n    const initialBody = {\n        commentable_type: \"ORGANIZATION\",\n        commentable_id: org_id,\n        organization_id: org_id,\n        models: [],\n        body: ''\n    }\n    const { USER } = useSelector((state: IStore) => state.USER)\n    const [body, setBody] = useState<InitialBody>(initialBody)\n    const onInputChange = (e: any) => {\n        setBody({ ...body, body: e.target.value })\n    }\n    const onChangeInputMedia = async (e: any) => {\n        const { mediaList } = await postMediaMulti(e)\n        setBody({\n            ...body,\n            models: mediaList\n        })\n    }\n    const onRemoveImg = (id: number) => {\n        setBody({\n            ...body,\n            models: body.models.filter(i => i.model_id !== id)\n        })\n    }\n    const onSubmitComment = async () => {\n        if (body.body !== '' || body.models.length > 0) {\n            await postComment({\n                ...body,\n                media_ids: body.models.map(i => i.model_id)\n            })\n            setBody(initialBody)\n            if (refCommentCnt) {\n                refCommentCnt.current?.scrollIntoView({ behavior: 'smooth' })\n            }\n        }\n    }\n\n    return (\n        <>\n            <div\n                className={style.comment_container}\n            >\n                <ul ref={refCommentCnt} className={style.comment_list}>\n                    {\n                        props.comments?.map((item: ITrendComment, index: number) => (\n                            <li key={index} className={style.comment_list_item}>\n                                <CommentItem comment={item} />\n                            </li>\n                        ))\n                    }\n                </ul>\n            </div>\n            <div className={style.comment_input}>\n                <div className={style.comment_user_avatar}>\n                    <img\n                        src={USER?.avatar ?? icon.userCircle}\n                        alt=\"\"\n                        onError={(e) => onErrorImg(e)}\n                    />\n                </div>\n                <div className={style.comment_input_cnt}>\n                    <div className={style.comment_img_thumb}>\n                        <ul className={style.img_thumb_list}>\n                            {\n                                body.models.map(i => (\n                                    <li key={i.model_id} className={style.img_thumb_list_item}>\n                                        <XButton\n                                            icon={icon.closeCircle}\n                                            onClick={() => onRemoveImg(i.model_id)}\n                                        />\n                                        <img className={style.img_thumb_item} src={i.original_url} alt=\"\" />\n                                    </li>\n                                ))\n                            }\n                        </ul>\n                    </div>\n                    <div className={style.comment_input_wrap}>\n                        <Input\n                            value={body.body}\n                            onChange={onInputChange}\n                            classNamePar={style.comment_input_par}\n                            className={style.comment_input_child}\n                            placeholder='Viết bình luận...'\n                            onKeyDown={onSubmitComment}\n                        />\n                        <div className={style.comment_input_ctrl}>\n                            <XButtonFile\n                                onChange={onChangeInputMedia}\n                                className={style.comment_btn}\n                                multiple={true}\n                            />\n                            <XButton\n                                icon={icon.sendBlack}\n                                className={style.comment_btn}\n                                onClick={onSubmitComment}\n                                loading={loadPost}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nconst CommentItem = ({ comment }: { comment: ITrendComment }) => {\n    let body = comment.body;\n    try {\n        body = JSON.parse(comment.body).text\n    } catch (error) {\n        body = comment.body\n    }\n\n    return (\n        <div className={style.comment_item_cnt}>\n            <div className={style.comment_item_par}>\n                <div className={style.comment_user_avatar}>\n                    <img src={comment.user?.avatar ?? icon.userCircle} onError={(e) => onErrorImg(e)} alt=\"\" />\n                </div>\n                <div className={style.comment_item_par_right}>\n                    <div className={style.comment_item_box}>\n                        <p className={style.comment_text}>\n                            <span className={style.comment_user_name} >{comment.user?.fullname}</span>\n                            {body}\n                        </p>\n                    </div>\n                    <ul className={style.comment_item_images}>\n                        {\n                            comment.media_url?.map((url: string, index: number) => (\n                                <li key={index} className={style.comment_item_image}>\n                                    <div className={style.comment_item_image_cnt}>\n                                        <img src={url} alt=\"\" />\n                                    </div>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                    <ul className={style.comment_item_child}>\n                        {\n                            comment.children?.map((child: ITrendCommentChild, i: number) => (\n                                <li key={i} className={style.comment_item_child_item}>\n                                    <div className={style.comment_user_avatar}>\n                                        <img\n                                            src={child.user?.avatar ?? icon.userCircle}\n                                            alt=\"\"\n                                            onError={(e) => onErrorImg(e)}\n                                        />\n                                    </div>\n                                    <div className={style.comment_item_par_right}>\n                                        <div\n                                            style={{ backgroundColor: \"#EAE9F5\" }}\n                                            className={style.comment_item_box}\n                                        >\n                                            <p className={style.comment_text}>\n                                                <span className={style.comment_user_name} >{child.user?.fullname}</span>\n                                                {child.body}\n                                            </p>\n                                            {/* <div className={style.comment_bot}>\n                                                <span className={style.comment_bot_create}>\n                                                    {moment('2022-10-11 11:22:00').locale(\"vi\").fromNow()}\n                                                </span>\n                                            </div> */}\n                                        </div>\n                                    </div>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\nconst LoadComment = () => {\n    return (\n        <ul className={style.detail_comment_list}>\n            {\n                [1, 2, 3, 4].map(i => (\n                    <li key={i} className={style.load_item}>\n                        <div className={style.load_item_left}>\n                            <Skeleton width={'100%'} height={'100%'} style={{ borderRadius: \"100%\" }} />\n                        </div>\n                        <div className={style.load_item_right}>\n                            <Skeleton width={'100%'} height={'100%'} />\n                        </div>\n                    </li>\n                ))\n            }\n        </ul>\n    )\n}"],"names":["id","onClose","params","useParams","trend_id","history","useHistory","trend","useFetch","API_3RD","response","context","org","useSwr","API_ROUTE","organization_id","onToggleFavorite","favoriteSt","useFavorite","org_id","type","count","favorites_count","favorite","is_favorite","resData","totalItem","isValidating","useFetchInfinite","commentsTrend","param","paramsComment","comments","loadPost","postComment","totalComment","useComment","className","style","onClick","goBack","icon","iconSize","src","media_url","loop","controls","playsInline","push","formatRouterLinkOrg","subdomain","organization_image","alt","organization_name","formatDateFromNow","createdAt","title","content","services","map","service","to","pathname","formatRouterLinkService","service_name","tiktok","play_count","digg_count","favorite_count","comment_count","share_count","LoadComment","TrendsDetailComment","props","refCommentCnt","useRef","initialBody","commentable_type","commentable_id","models","body","USER","useSelector","state","setBody","useState","onSubmitComment","async","length","media_ids","i","model_id","current","scrollIntoView","behavior","ref","item","index","CommentItem","comment","avatar","onError","e","onErrorImg","onRemoveImg","filter","original_url","value","onChange","target","classNamePar","placeholder","onKeyDown","mediaList","postMediaMulti","multiple","loading","JSON","parse","text","error","user","fullname","url","children","child","backgroundColor","width","height","borderRadius"],"sourceRoot":""}