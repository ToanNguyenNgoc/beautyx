{"version":3,"file":"static/js/930.ec6f4666.chunk.js","mappings":"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","sources":["webpack://web-booking/./src/pages/TrendsDetail/trend-detail.module.css?8158","pages/TrendsDetail/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"back_btn\":\"trend-detail_back_btn__cAjmb\",\"container\":\"trend-detail_container__LW5aw\",\"left\":\"trend-detail_left__zkPEH\",\"video_container\":\"trend-detail_video_container__NJTaI\",\"video_blur\":\"trend-detail_video_blur__BJ7VA\",\"video_wrapper\":\"trend-detail_video_wrapper__16p74\",\"video\":\"trend-detail_video__UtiV1\",\"right\":\"trend-detail_right__zzi54\",\"right_top\":\"trend-detail_right_top__s6Pbt\",\"right_top_org\":\"trend-detail_right_top_org__W77YF\",\"org_detail\":\"trend-detail_org_detail__NhzaH\",\"org_detail_img\":\"trend-detail_org_detail_img__tYN5Z\",\"org_detail_right\":\"trend-detail_org_detail_right__PcIwP\",\"org_detail_name\":\"trend-detail_org_detail_name__iZmAq\",\"time_late\":\"trend-detail_time_late__lC1tj\",\"right_top_org_btn\":\"trend-detail_right_top_org_btn__mjg6i\",\"org_btn_act\":\"trend-detail_org_btn_act__i2LnH\",\"title\":\"trend-detail_title__2lUzd\",\"content\":\"trend-detail_content__tKhqX\",\"right_top_services\":\"trend-detail_right_top_services__ruvvm\",\"service_link_text\":\"trend-detail_service_link_text__AU6Dx\",\"interactive\":\"trend-detail_interactive__pKqNC\",\"interactive_item\":\"trend-detail_interactive_item__z49BQ\",\"interactive_icon_btn\":\"trend-detail_interactive_icon_btn__8ItPJ\",\"interactive_item_text\":\"trend-detail_interactive_item_text__jwUkK\",\"comment_container\":\"trend-detail_comment_container__fcxFH\",\"comment_list\":\"trend-detail_comment_list__rx5JH\",\"comment_item_cnt\":\"trend-detail_comment_item_cnt__-K1Rg\",\"comment_item_par\":\"trend-detail_comment_item_par__C4g1p\",\"comment_user_avatar\":\"trend-detail_comment_user_avatar__xmqjw\",\"comment_item_par_right\":\"trend-detail_comment_item_par_right__RXhjR\",\"comment_item_box\":\"trend-detail_comment_item_box__cXnYc\",\"comment_text\":\"trend-detail_comment_text__lrFWT\",\"comment_user_name\":\"trend-detail_comment_user_name__QaZjT\",\"comment_bot\":\"trend-detail_comment_bot__sSat5\",\"comment_bot_create\":\"trend-detail_comment_bot_create__zNGBX\",\"comment_bot_reply\":\"trend-detail_comment_bot_reply__ueWEn\",\"comment_item_child\":\"trend-detail_comment_item_child__grHQ+\",\"comment_item_child_item\":\"trend-detail_comment_item_child_item__ZN2fE\",\"comment_input\":\"trend-detail_comment_input__YOZCG\",\"comment_input_cnt\":\"trend-detail_comment_input_cnt__Aq9mC\",\"comment_input_par\":\"trend-detail_comment_input_par__lCxpM\",\"comment_input_child\":\"trend-detail_comment_input_child__HE4ot\",\"comment_input_ctrl\":\"trend-detail_comment_input_ctrl__LYZ1H\",\"comment_btn\":\"trend-detail_comment_btn__CLVZS\",\"detail_comment_list\":\"trend-detail_detail_comment_list__Iz0Jf\",\"load_item\":\"trend-detail_load_item__UZLN5\",\"load_item_left\":\"trend-detail_load_item_left__5Lf8c\",\"load_item_right\":\"trend-detail_load_item_right__aUnBa\"};","import API_3RD from 'api/3rd-api';\nimport { Input, XButton, XButtonFile } from 'components/Layout';\nimport icon from 'constants/icon';\nimport { useFavorite, useFetch, useFetchInfinite, useSwr } from 'hooks';\nimport { ITrend } from 'pages/Trends/trend.interface';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport { \n    formatRouterLinkOrg, \n    formatRouterLinkService \n} from 'utils/formatRouterLink/formatRouter';\nimport style from './trend-detail.module.css'\nimport Skeleton from 'react-loading-skeleton';\nimport { ITrendComment, ITrendCommentChild } from './interface';\nimport { formatDateFromNow, onErrorImg } from 'utils';\nimport { IOrganization } from 'interface';\nimport API_ROUTE from 'api/_api';\nimport { useSelector } from 'react-redux';\nimport IStore from 'interface/IStore';\nimport { acceptImage } from 'utils/validateForm';\n\nfunction TrendsDetail({ id, onClose }: { id?: string, onClose?: () => void }) {\n    const params = useParams()\n    const trend_id = id ?? params?.id\n    const history = useHistory()\n    const trend: ITrend = useFetch(\n        trend_id,\n        `${API_3RD.API_NODE}/trends/${trend_id}`,\n        { 'include': 'services|tiktok' }\n    ).response?.context\n    const org: IOrganization = useSwr(\n        API_ROUTE.ORG(trend?.organization_id),\n        trend?.organization_id\n    ).response\n    const { onToggleFavorite, favoriteSt } = useFavorite({\n        org_id: org?.id,\n        type: 'ORG',\n        count: org?.favorites_count,\n        favorite: org?.is_favorite\n    })\n    const { resData, totalItem, isValidating } = useFetchInfinite(\n        trend_id,\n        `${API_3RD.API_NODE}/tiktok/getCommentsByUrl`,\n        { 'filter[trend]': trend_id }\n    )\n    const comments = resData ?? []\n\n    const onOrgDetail = () => history.push(formatRouterLinkOrg(trend?.organization_id))\n    const onBack = () => {\n        if (onClose) {\n            onClose()\n        } else {\n            history.goBack()\n        }\n    }\n\n    return (\n        trend ?\n            <div className={style.container} >\n                <XButton\n                    onClick={onBack}\n                    className={style.back_btn}\n                    icon={icon.backWhite}\n                    iconSize={24}\n                />\n                <div className={style.left}>\n                    <div className={style.video_container}>\n                        <video className={style.video_blur} src={`${trend.media_url}#t=0.001`}></video>\n                        <div className={style.video_wrapper}>\n                            <video\n                                className={style.video}\n                                loop\n                                controls\n                                webkit-playsinline=\"webkit-playsinline\"\n                                playsInline={true}\n                            >\n                                <source type='video/mp4' src={`${trend.media_url}#t=0.001`} />\n                            </video>\n                        </div>\n                    </div>\n                </div>\n                <div className={style.right}>\n                    <div className={style.right_top}>\n                        <div className={style.right_top_org}>\n                            <div onClick={onOrgDetail} className={style.org_detail}>\n                                <div className={style.org_detail_img}>\n                                    <img src={trend.organization_image} alt=\"\" />\n                                </div>\n                                <div className={style.org_detail_right}>\n                                    <p className={style.org_detail_name}>{trend.organization_name}</p>\n                                    <p className={style.time_late}>\n                                        {formatDateFromNow(trend.createdAt)}\n                                    </p>\n                                </div>\n                            </div>\n                            <XButton\n                                onClick={onToggleFavorite}\n                                className={\n                                    favoriteSt.is_favorite ? style.right_top_org_btn : style.org_btn_act\n                                }\n                                title={favoriteSt.is_favorite ? 'Đang theo dõi':'Theo dõi'}\n                            />\n                        </div>\n                        <div className={style.right_top_content}>\n                            <p className={style.title}>{trend.title}</p>\n                            <p className={style.content}>{trend.content}</p>\n                        </div>\n                        <div className={style.right_top_services}>\n                            {\n                                trend.services?.map(service => (\n                                    <Link\n                                        key={service.id}\n                                        to={{\n                                            pathname: formatRouterLinkService(\n                                                service.id,\n                                                trend.organization_id,\n                                                service.service_name\n                                            )\n                                        }}\n                                    >\n                                        <span className={style.service_link_text}>\n                                            #{service.service_name}\n                                        </span>\n                                    </Link>\n                                ))\n                            }\n                        </div>\n                        <div className={style.interactive}>\n                            <div className={style.interactive_item}>\n                                <XButton\n                                    iconSize={16}\n                                    className={style.interactive_icon_btn}\n                                    icon={icon.eyeBoldBlack}\n                                />\n                                <span className={style.interactive_item_text}>{trend?.tiktok?.play_count}</span>\n                            </div>\n                            <div className={style.interactive_item}>\n                                <XButton\n                                    iconSize={16}\n                                    className={style.interactive_icon_btn}\n                                    onClick={onToggleFavorite}\n                                    icon={favoriteSt.is_favorite ? icon.heartBoldRed : icon.heartBoldBlack}\n                                />\n                                <span className={style.interactive_item_text}>\n                                    {trend?.tiktok?.digg_count + (favoriteSt.favorite_count ?? 0)}\n                                </span>\n                            </div>\n                            <div className={style.interactive_item}>\n                                <XButton\n                                    iconSize={16}\n                                    className={style.interactive_icon_btn}\n                                    icon={icon.commentBoldBlack}\n                                />\n                                <span className={style.interactive_item_text}>\n                                    {trend?.tiktok?.comment_count}\n                                </span>\n                            </div>\n                            <div className={style.interactive_item}>\n                                <XButton\n                                    iconSize={16}\n                                    className={style.interactive_icon_btn}\n                                    icon={icon.shareBoldBlack}\n                                />\n                                <span className={style.interactive_item_text}>{trend?.tiktok?.share_count}</span>\n                            </div>\n                        </div>\n                    </div>\n                    {totalItem === 1 && isValidating && <LoadComment />}\n                    {resData && <TrendsDetailComment comments={comments} />}\n                </div>\n            </div>\n            :\n            <></>\n    );\n}\n\nexport default TrendsDetail;\n\ninterface TrendsDetailCommentProps {\n    comments: ITrendComment[]\n}\n\nconst TrendsDetailComment = (props: TrendsDetailCommentProps) => {\n    const { comments } = props\n    const {USER} = useSelector((state:IStore) => state.USER)\n    return (\n        <>\n            <div\n                className={style.comment_container}\n            >\n                <ul className={style.comment_list}>\n                    {\n                        comments?.map((item: ITrendComment, index: number) => (\n                            <li key={index} className={style.comment_list_item}>\n                                <CommentItem comment={item} />\n                            </li>\n                        ))\n                    }\n                </ul>\n            </div>\n            <div className={style.comment_input}>\n                <div className={style.comment_user_avatar}>\n                    <img\n                        src={USER?.avatar ?? icon.userCircle}\n                        alt=\"\"\n                        onError={(e) => onErrorImg(e)}\n                    />\n                </div>\n                <div className={style.comment_input_cnt}>\n                    <Input\n                        classNamePar={style.comment_input_par}\n                        className={style.comment_input_child}\n                        placeholder='Viết bình luận...'\n                    />\n                    <div className={style.comment_input_ctrl}>\n                    <XButtonFile\n                        className={style.comment_btn}\n                    />\n                    <XButton\n                        icon={icon.sendBlack}\n                        className={style.comment_btn}\n                    />\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nconst CommentItem = ({ comment }: { comment: ITrendComment }) => {\n    return (\n        <div className={style.comment_item_cnt}>\n            <div className={style.comment_item_par}>\n                <div className={style.comment_user_avatar}>\n                    <img src={comment.user?.avatar ?? icon.userCircle} alt=\"\" />\n                </div>\n                <div className={style.comment_item_par_right}>\n                    <div className={style.comment_item_box}>\n                        <p className={style.comment_text}>\n                            <span className={style.comment_user_name} >{comment.user?.fullname}</span>\n                            {comment.body}\n                        </p>\n                        {/* <div className={style.comment_bot}>\n                            <span className={style.comment_bot_create}>\n                                {moment('2022-10-11 11:22:00').locale(\"vi\").fromNow()}\n                            </span>\n                            <span className={style.comment_bot_reply}>Reply</span>\n                        </div> */}\n                    </div>\n                    <ul className={style.comment_item_child}>\n                        {\n                            comment.children?.map((child: ITrendCommentChild, i: number) => (\n                                <li key={i} className={style.comment_item_child_item}>\n                                    <div className={style.comment_user_avatar}>\n                                        <img \n                                            src={child.user?.avatar ?? icon.userCircle} \n                                            alt=\"\" \n                                            onError={(e) => onErrorImg(e)}\n                                        />\n                                    </div>\n                                    <div className={style.comment_item_par_right}>\n                                        <div\n                                            style={{ backgroundColor: \"#EAE9F5\" }}\n                                            className={style.comment_item_box}\n                                        >\n                                            <p className={style.comment_text}>\n                                                <span className={style.comment_user_name} >{child.user?.fullname}</span>\n                                                {child.body}\n                                            </p>\n                                            {/* <div className={style.comment_bot}>\n                                                <span className={style.comment_bot_create}>\n                                                    {moment('2022-10-11 11:22:00').locale(\"vi\").fromNow()}\n                                                </span>\n                                            </div> */}\n                                        </div>\n                                    </div>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\nconst LoadComment = () => {\n    return (\n        <ul className={style.detail_comment_list}>\n            {\n                [1, 2, 3, 4].map(i => (\n                    <li key={i} className={style.load_item}>\n                        <div className={style.load_item_left}>\n                            <Skeleton width={'100%'} height={'100%'} style={{ borderRadius: \"100%\" }} />\n                        </div>\n                        <div className={style.load_item_right}>\n                            <Skeleton width={'100%'} height={'100%'} />\n                        </div>\n                    </li>\n                ))\n            }\n        </ul>\n    )\n}"],"names":["id","onClose","params","useParams","trend_id","history","useHistory","trend","useFetch","API_3RD","response","context","org","useSwr","API_ROUTE","organization_id","onToggleFavorite","favoriteSt","useFavorite","org_id","type","count","favorites_count","favorite","is_favorite","resData","totalItem","isValidating","useFetchInfinite","comments","className","style","onClick","goBack","icon","iconSize","src","media_url","loop","controls","playsInline","push","formatRouterLinkOrg","organization_image","alt","organization_name","formatDateFromNow","createdAt","title","content","services","map","service","to","pathname","formatRouterLinkService","service_name","tiktok","play_count","digg_count","favorite_count","comment_count","share_count","LoadComment","TrendsDetailComment","props","USER","useSelector","state","item","index","CommentItem","comment","avatar","onError","e","onErrorImg","classNamePar","placeholder","user","fullname","body","children","child","i","backgroundColor","width","height","borderRadius"],"sourceRoot":""}