{"version":3,"file":"static/js/769.ae280843.chunk.js","mappings":"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","sources":["webpack://web-booking/./src/pages/Trends/trends.module.css?6c50","pages/Trends/TrendDetailDia.tsx","pages/Trends/index.tsx","webpack://web-booking/./src/pages/TrendsDetail/trend-detail.module.css?8158","pages/TrendsDetail/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container_large\":\"trends_container_large__B3usY\",\"trend_list\":\"trends_trend_list__b0stv\",\"video_item_cnt\":\"trends_video_item_cnt__Y04IM\",\"trend_list_video_thumb\":\"trends_trend_list_video_thumb__fiLD0\",\"trend_item_head\":\"trends_trend_item_head__bhL+j\",\"trend_item_center\":\"trends_trend_item_center__LyHmS\",\"trend_item_body\":\"trends_trend_item_body__pIhpM\",\"trend_item_video_thumb\":\"trends_trend_item_video_thumb__QZNby\",\"trend_item_bot_ex\":\"trends_trend_item_bot_ex__3tgm-\",\"trend_item_desc\":\"trends_trend_item_desc__kPdxa\",\"trend_item_bot_org\":\"trends_trend_item_bot_org__Alayd\",\"trend_item_bot_org_img\":\"trends_trend_item_bot_org_img__XSgoS\",\"trend_item_bot_org_name\":\"trends_trend_item_bot_org_name__FHDqR\",\"trend_item_head_org\":\"trends_trend_item_head_org__j14Ob\",\"trend_item_head_name\":\"trends_trend_item_head_name__RXuqV\",\"org_name\":\"trends_org_name__0zme9\",\"create_at\":\"trends_create_at__TG4lF\",\"trend_item_bot\":\"trends_trend_item_bot__GH2bq\",\"item_ex\":\"trends_item_ex__Jx-cl\",\"item_ex_icon\":\"trends_item_ex_icon__zyDMA\",\"item_ex_text\":\"trends_item_ex_text__FYVm1\"};","import { Dialog } from '@mui/material';\nimport TrendsDetail from 'pages/TrendsDetail';\nimport React from 'react';\n\ninterface TrendDetailDiaProps {\n    open: boolean, setOpen: (open: boolean) => void,\n    _id: string\n}\n\nfunction TrendDetailDia(props: TrendDetailDiaProps) {\n    const { open, setOpen, _id } = props;\n    const onClose = () => setOpen(false)\n    return (\n        <Dialog\n            fullScreen\n            open={open}\n        >\n            {open && <TrendsDetail id={_id} onClose={onClose} />}\n        </Dialog>\n    );\n}\n\nexport default TrendDetailDia;","/* eslint-disable react-hooks/exhaustive-deps */\nimport API_3RD from \"api/3rd-api\";\nimport React, { useRef, useState } from \"react\";\nimport { useDeviceMobile, useElementOnScreen, useFetch } from \"hooks\";\nimport { ITrend } from \"./trend.interface\";\nimport { Container } from \"@mui/system\";\nimport style from \"./trends.module.css\";\nimport dayjs from \"dayjs\";\n// import locate from 'dayjs/locale/vi'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport icon from \"constants/icon\";\nimport { useHistory } from \"react-router-dom\";\nimport { formatRouterLinkOrg } from \"utils/formatRouterLink/formatRouter\";\nimport TrendDetailDia from \"./TrendDetailDia\";\nimport ReactPlayer from \"react-player/lazy\";\nimport HeadMobile from \"features/HeadMobile\";\ndayjs.extend(relativeTime)\n\nfunction Trends() {\n    const history = useHistory()\n    const IS_MB = useDeviceMobile()\n    const { response } = useFetch(\n        true,\n        `${API_3RD.API_NODE}/trends`,\n        {\n            'limit': '20',\n            'include': 'services|tiktok'\n        }\n    );\n\n    const trends: ITrend[] = response?.context?.data ?? [];\n    return (\n        <>\n            {IS_MB && <HeadMobile onBackFunc={() => history.push('/homepage')} title=\"Xu hướng\" />}\n            <Container>\n                <div className={style.container_large}>\n                    <ul className={style.trend_list}>\n                        {\n                            trends.map((item: ITrend, index: number) => (\n                                <li key={index} className={style.trend_list_video_thumb}>\n                                    <VideoItemThumb\n                                        item={item}\n                                    />\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n            </Container>\n        </>\n    );\n}\n\nexport default Trends;\n\ninterface VideoItemThumbProps {\n    item: ITrend\n}\n\nconst VideoItemThumb = (props: VideoItemThumbProps) => {\n    const { item } = props;\n    const history = useHistory()\n    const videoRef = useRef<HTMLVideoElement>(null)\n    const itemRef = useRef<HTMLDivElement>(null)\n    const [open, setOpen] = useState(false)\n    const IS_MB = useDeviceMobile()\n    const onDetail = () => {\n        if (IS_MB) {\n            videoRef.current?.pause()\n            setOpen(true)\n        } else {\n            history.push(`/video/${item._id}`)\n        }\n    }\n\n    const options = {\n        root: null,\n        rootMargin: \"0px\",\n        threshold: 0.3,\n    };\n    const isVisible = useElementOnScreen(options, itemRef);\n    const onOrgDetail = () => {\n        history.push(formatRouterLinkOrg(item.organization_id))\n    }\n    return (\n        <>\n            <div\n                onClick={!IS_MB ? () => onDetail() : () => { }}\n                className={style.video_item_cnt}\n            >\n                <div ref={itemRef} className={style.trend_item_center} >\n                </div>\n                <div\n                    onClick={onOrgDetail}\n                    className={style.trend_item_head}\n                >\n                    <div className={style.trend_item_head_org}>\n                        <img src={item.organization_image} alt=\"\" />\n                    </div>\n                    <div className={style.trend_item_head_name}>\n                        <p className={style.org_name}>{item.organization_name}</p>\n                        {/* <p className={style.create_at}>{dayjs(item.createdAt).locale(locate.name).fromNow()}</p> */}\n                    </div>\n                </div>\n                <div className={style.trend_item_body}>\n                    <ReactPlayer\n                        className={style.trend_item_video_thumb}\n                        url={`${item.media_url}#t=0.001`}\n                        width={'100%'}\n                        height={'100%'}\n                        playing={isVisible && IS_MB}\n                        muted={true}\n                        playsinline={true}\n                        controls\n                    />\n                </div>\n                <div className={style.trend_item_bot}>\n                    <div onClick={onDetail} className={style.trend_item_bot_ex}>\n                        <div className={style.item_ex}>\n                            <img className={style.item_ex_icon} src={icon.heartBoldBlack} alt=\"\" />\n                            <span className={style.item_ex_text}>{item.tiktok?.digg_count}</span>\n                        </div>\n                        <div className={style.item_ex}>\n                            <img className={style.item_ex_icon} src={icon.commentBoldBlack} alt=\"\" />\n                            <span className={style.item_ex_text}>{item.tiktok?.comment_count}</span>\n                        </div>\n                        <div className={style.item_ex}>\n                            <img className={style.item_ex_icon} src={icon.shareBoldBlack} alt=\"\" />\n                            <span className={style.item_ex_text}>{item.tiktok?.share_count}</span>\n                        </div>\n                    </div>\n                    <p className={style.trend_item_desc}>\n                        {item.content}\n                    </p>\n                    <div className={style.trend_item_bot_org}>\n                        <div className={style.trend_item_bot_org_img}>\n                            <img src={item.organization_image} alt=\"\" />\n                        </div>\n                        <span className={style.trend_item_bot_org_name}>{item.organization_name}</span>\n                    </div>\n                </div>\n            </div>\n            <TrendDetailDia\n                open={open} setOpen={setOpen} _id={item._id}\n            />\n        </>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"back_btn\":\"trend-detail_back_btn__cAjmb\",\"container\":\"trend-detail_container__LW5aw\",\"left\":\"trend-detail_left__zkPEH\",\"video_container\":\"trend-detail_video_container__NJTaI\",\"video_blur\":\"trend-detail_video_blur__BJ7VA\",\"video_wrapper\":\"trend-detail_video_wrapper__16p74\",\"video\":\"trend-detail_video__UtiV1\",\"right\":\"trend-detail_right__zzi54\",\"right_top\":\"trend-detail_right_top__s6Pbt\",\"right_top_org\":\"trend-detail_right_top_org__W77YF\",\"org_detail\":\"trend-detail_org_detail__NhzaH\",\"org_detail_img\":\"trend-detail_org_detail_img__tYN5Z\",\"org_detail_right\":\"trend-detail_org_detail_right__PcIwP\",\"org_detail_name\":\"trend-detail_org_detail_name__iZmAq\",\"time_late\":\"trend-detail_time_late__lC1tj\",\"right_top_org_btn\":\"trend-detail_right_top_org_btn__mjg6i\",\"org_btn_act\":\"trend-detail_org_btn_act__i2LnH\",\"title\":\"trend-detail_title__2lUzd\",\"content\":\"trend-detail_content__tKhqX\",\"right_top_services\":\"trend-detail_right_top_services__ruvvm\",\"service_link_text\":\"trend-detail_service_link_text__AU6Dx\",\"interactive\":\"trend-detail_interactive__pKqNC\",\"interactive_item\":\"trend-detail_interactive_item__z49BQ\",\"interactive_icon_btn\":\"trend-detail_interactive_icon_btn__8ItPJ\",\"interactive_item_text\":\"trend-detail_interactive_item_text__jwUkK\",\"comment_container\":\"trend-detail_comment_container__fcxFH\",\"comment_list\":\"trend-detail_comment_list__rx5JH\",\"comment_item_cnt\":\"trend-detail_comment_item_cnt__-K1Rg\",\"comment_item_par\":\"trend-detail_comment_item_par__C4g1p\",\"comment_user_avatar\":\"trend-detail_comment_user_avatar__xmqjw\",\"comment_item_par_right\":\"trend-detail_comment_item_par_right__RXhjR\",\"comment_item_box\":\"trend-detail_comment_item_box__cXnYc\",\"comment_text\":\"trend-detail_comment_text__lrFWT\",\"comment_user_name\":\"trend-detail_comment_user_name__QaZjT\",\"comment_bot\":\"trend-detail_comment_bot__sSat5\",\"comment_bot_create\":\"trend-detail_comment_bot_create__zNGBX\",\"comment_bot_reply\":\"trend-detail_comment_bot_reply__ueWEn\",\"comment_item_child\":\"trend-detail_comment_item_child__grHQ+\",\"comment_item_child_item\":\"trend-detail_comment_item_child_item__ZN2fE\",\"comment_input\":\"trend-detail_comment_input__YOZCG\",\"comment_input_cnt\":\"trend-detail_comment_input_cnt__Aq9mC\",\"comment_input_wrap\":\"trend-detail_comment_input_wrap__pn1bC\",\"comment_input_par\":\"trend-detail_comment_input_par__lCxpM\",\"comment_img_thumb\":\"trend-detail_comment_img_thumb__yCjAm\",\"img_thumb_list\":\"trend-detail_img_thumb_list__f5BgQ\",\"img_thumb_list_item\":\"trend-detail_img_thumb_list_item__mCfTJ\",\"img_thumb_item\":\"trend-detail_img_thumb_item__p5tKG\",\"comment_input_child\":\"trend-detail_comment_input_child__HE4ot\",\"comment_input_ctrl\":\"trend-detail_comment_input_ctrl__LYZ1H\",\"comment_btn\":\"trend-detail_comment_btn__CLVZS\",\"detail_comment_list\":\"trend-detail_detail_comment_list__Iz0Jf\",\"load_item\":\"trend-detail_load_item__UZLN5\",\"load_item_left\":\"trend-detail_load_item_left__5Lf8c\",\"load_item_right\":\"trend-detail_load_item_right__aUnBa\",\"comment_item_images\":\"trend-detail_comment_item_images__6Umg+\",\"comment_item_image\":\"trend-detail_comment_item_image__eM+DV\",\"comment_item_image_cnt\":\"trend-detail_comment_item_image_cnt__yjLz6\"};","import API_3RD from 'api/3rd-api';\nimport { Input, XButton, XButtonFile } from 'components/Layout';\nimport icon from 'constants/icon';\nimport { useComment, useFavorite, useFetch, useFetchInfinite, useSwr } from 'hooks';\nimport { ITrend } from 'pages/Trends/trend.interface';\nimport { Link, useParams, useHistory } from 'react-router-dom';\nimport {\n    formatRouterLinkOrg,\n    formatRouterLinkService\n} from 'utils/formatRouterLink/formatRouter';\nimport style from './trend-detail.module.css'\nimport Skeleton from 'react-loading-skeleton';\nimport { ITrendComment, ITrendCommentChild } from './interface';\nimport { formatDateFromNow, onErrorImg } from 'utils';\nimport { IOrganization } from 'interface';\nimport API_ROUTE from 'api/_api';\nimport { useSelector } from 'react-redux';\nimport IStore from 'interface/IStore';\nimport { postMediaMulti } from 'hooks'\nimport { useRef, useState } from 'react';\nimport { ParamComment } from 'params-query/param.interface';\nimport { paramsComment } from 'params-query';\n\nfunction TrendsDetail({ id, onClose }: { id?: string, onClose?: () => void }) {\n    const params = useParams()\n    const trend_id = id ?? params?.id\n    const history = useHistory()\n    const trend: ITrend = useFetch(\n        trend_id,\n        `${API_3RD.API_NODE}/trends/${trend_id}`,\n        { 'include': 'services|tiktok' }\n    ).response?.context\n    const org: IOrganization = useSwr(\n        API_ROUTE.ORG(trend?.organization_id),\n        trend?.organization_id\n    ).response\n    const { onToggleFavorite, favoriteSt } = useFavorite({\n        org_id: org?.id,\n        type: 'ORG',\n        count: org?.favorites_count,\n        favorite: org?.is_favorite\n    })\n    const { resData, totalItem, isValidating } = useFetchInfinite(\n        trend_id,\n        `${API_3RD.API_NODE}/tiktok/getCommentsByUrl`,\n        { 'filter[trend]': trend_id }\n    )\n    const commentsTrend = resData ?? []\n    const param: ParamComment = {\n        ...paramsComment,\n        \"filter[commentable_type]\": \"ORGANIZATION\",\n        \"filter[commentable_id]\": org?.id,\n        \"limit\": 10\n    }\n    const { comments, loadPost, postComment, totalComment } = useComment(param)\n\n    const onOrgDetail = () => history.push(formatRouterLinkOrg(org?.subdomain ?? trend?.organization_id))\n    const onBack = () => {\n        if (onClose) {\n            onClose()\n        } else {\n            history.goBack()\n        }\n    }\n\n    return (\n        trend ?\n            <div className={style.container} >\n                <XButton\n                    onClick={onBack}\n                    className={style.back_btn}\n                    icon={icon.backWhite}\n                    iconSize={24}\n                />\n                <div className={style.left}>\n                    <div className={style.video_container}>\n                        <video className={style.video_blur} src={`${trend.media_url}#t=0.001`}></video>\n                        <div className={style.video_wrapper}>\n                            <video\n                                className={style.video}\n                                loop\n                                controls\n                                webkit-playsinline=\"webkit-playsinline\"\n                                playsInline={true}\n                            >\n                                <source type='video/mp4' src={`${trend.media_url}#t=0.001`} />\n                            </video>\n                        </div>\n                    </div>\n                </div>\n                <div className={style.right}>\n                    <div className={style.right_top}>\n                        <div className={style.right_top_org}>\n                            <div onClick={onOrgDetail} className={style.org_detail}>\n                                <div className={style.org_detail_img}>\n                                    <img src={trend.organization_image} alt=\"\" />\n                                </div>\n                                <div className={style.org_detail_right}>\n                                    <p className={style.org_detail_name}>{trend.organization_name}</p>\n                                    <p className={style.time_late}>\n                                        {formatDateFromNow(trend.createdAt)}\n                                    </p>\n                                </div>\n                            </div>\n                            <XButton\n                                onClick={onToggleFavorite}\n                                className={\n                                    favoriteSt.is_favorite ? style.right_top_org_btn : style.org_btn_act\n                                }\n                                title={favoriteSt.is_favorite ? 'Đang theo dõi' : 'Theo dõi'}\n                            />\n                        </div>\n                        <div className={style.right_top_content}>\n                            <p className={style.title}>{trend.title}</p>\n                            <p className={style.content}>{trend.content}</p>\n                        </div>\n                        <div className={style.right_top_services}>\n                            {\n                                trend.services?.map(service => (\n                                    <Link\n                                        key={service.id}\n                                        to={{\n                                            pathname: formatRouterLinkService(\n                                                service.id,\n                                                trend.organization_id,\n                                                service.service_name\n                                            )\n                                        }}\n                                    >\n                                        <span className={style.service_link_text}>\n                                            #{service.service_name}\n                                        </span>\n                                    </Link>\n                                ))\n                            }\n                        </div>\n                        <div className={style.interactive}>\n                            <div className={style.interactive_item}>\n                                <XButton\n                                    iconSize={16}\n                                    className={style.interactive_icon_btn}\n                                    icon={icon.eyeBoldBlack}\n                                />\n                                <span className={style.interactive_item_text}>{trend?.tiktok?.play_count}</span>\n                            </div>\n                            <div className={style.interactive_item}>\n                                <XButton\n                                    iconSize={16}\n                                    className={style.interactive_icon_btn}\n                                    onClick={onToggleFavorite}\n                                    icon={favoriteSt.is_favorite ? icon.heartBoldRed : icon.heartBoldBlack}\n                                />\n                                <span className={style.interactive_item_text}>\n                                    {trend?.tiktok?.digg_count + (favoriteSt.favorite_count ?? 0)}\n                                </span>\n                            </div>\n                            <div className={style.interactive_item}>\n                                <XButton\n                                    iconSize={16}\n                                    className={style.interactive_icon_btn}\n                                    icon={icon.commentBoldBlack}\n                                />\n                                <span className={style.interactive_item_text}>\n                                    {trend?.tiktok?.comment_count + totalComment}\n                                </span>\n                            </div>\n                            <div className={style.interactive_item}>\n                                <XButton\n                                    iconSize={16}\n                                    className={style.interactive_icon_btn}\n                                    icon={icon.shareBoldBlack}\n                                />\n                                <span className={style.interactive_item_text}>{trend?.tiktok?.share_count}</span>\n                            </div>\n                        </div>\n                    </div>\n                    {totalItem === 1 && isValidating && <LoadComment />}\n                    {resData &&\n                        <TrendsDetailComment\n                            org_id={trend.organization_id}\n                            comments={[...comments, ...commentsTrend]}\n                            postComment={postComment}\n                            loadPost={loadPost}\n                        />}\n                </div>\n            </div>\n            :\n            <></>\n    );\n}\n\nexport default TrendsDetail;\n\ninterface InitialBody {\n    commentable_type: string,\n    commentable_id: number | string,\n    organization_id: number | string,\n    models: Model[]\n    body: string\n}\ninterface TrendsDetailCommentProps {\n    comments: ITrendComment[],\n    org_id: string | number,\n    postComment: (body?: any) => void,\n    loadPost: boolean\n}\ninterface Model { model_id: number, original_url: string }\n\n\n\nconst TrendsDetailComment = (props: TrendsDetailCommentProps) => {\n    const { loadPost, postComment } = props\n    const org_id = props.org_id\n    const refCommentCnt = useRef<HTMLUListElement>(null)\n    const initialBody = {\n        commentable_type: \"ORGANIZATION\",\n        commentable_id: org_id,\n        organization_id: org_id,\n        models: [],\n        body: ''\n    }\n    const { USER } = useSelector((state: IStore) => state.USER)\n    const [body, setBody] = useState<InitialBody>(initialBody)\n    const onInputChange = (e: any) => {\n        setBody({ ...body, body: e.target.value })\n    }\n    const onChangeInputMedia = async (e: any) => {\n        const { mediaList } = await postMediaMulti(e)\n        setBody({\n            ...body,\n            models: mediaList\n        })\n    }\n    const onRemoveImg = (id: number) => {\n        setBody({\n            ...body,\n            models: body.models.filter(i => i.model_id !== id)\n        })\n    }\n    const onSubmitComment = async () => {\n        if (body.body !== '' || body.models.length > 0) {\n            await postComment({\n                ...body,\n                media_ids: body.models.map(i => i.model_id)\n            })\n            setBody(initialBody)\n            if (refCommentCnt) {\n                refCommentCnt.current?.scrollIntoView({ behavior: 'smooth' })\n            }\n        }\n    }\n\n    return (\n        <>\n            <div\n                className={style.comment_container}\n            >\n                <ul ref={refCommentCnt} className={style.comment_list}>\n                    {\n                        props.comments?.map((item: ITrendComment, index: number) => (\n                            <li key={index} className={style.comment_list_item}>\n                                <CommentItem comment={item} />\n                            </li>\n                        ))\n                    }\n                </ul>\n            </div>\n            <div className={style.comment_input}>\n                <div className={style.comment_user_avatar}>\n                    <img\n                        src={USER?.avatar ?? icon.userCircle}\n                        alt=\"\"\n                        onError={(e) => onErrorImg(e)}\n                    />\n                </div>\n                <div className={style.comment_input_cnt}>\n                    <div className={style.comment_img_thumb}>\n                        <ul className={style.img_thumb_list}>\n                            {\n                                body.models.map(i => (\n                                    <li key={i.model_id} className={style.img_thumb_list_item}>\n                                        <XButton\n                                            icon={icon.closeCircle}\n                                            onClick={() => onRemoveImg(i.model_id)}\n                                        />\n                                        <img className={style.img_thumb_item} src={i.original_url} alt=\"\" />\n                                    </li>\n                                ))\n                            }\n                        </ul>\n                    </div>\n                    <div className={style.comment_input_wrap}>\n                        <Input\n                            value={body.body}\n                            onChange={onInputChange}\n                            classNamePar={style.comment_input_par}\n                            className={style.comment_input_child}\n                            placeholder='Viết bình luận...'\n                            onKeyDown={onSubmitComment}\n                        />\n                        <div className={style.comment_input_ctrl}>\n                            <XButtonFile\n                                onChange={onChangeInputMedia}\n                                className={style.comment_btn}\n                                multiple={true}\n                            />\n                            <XButton\n                                icon={icon.sendBlack}\n                                className={style.comment_btn}\n                                onClick={onSubmitComment}\n                                loading={loadPost}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nconst CommentItem = ({ comment }: { comment: ITrendComment }) => {\n    let body = comment.body;\n    try {\n        body = JSON.parse(comment.body).text\n    } catch (error) {\n        body = comment.body\n    }\n\n    return (\n        <div className={style.comment_item_cnt}>\n            <div className={style.comment_item_par}>\n                <div className={style.comment_user_avatar}>\n                    <img src={comment.user?.avatar ?? icon.userCircle} onError={(e) => onErrorImg(e)} alt=\"\" />\n                </div>\n                <div className={style.comment_item_par_right}>\n                    <div className={style.comment_item_box}>\n                        <p className={style.comment_text}>\n                            <span className={style.comment_user_name} >{comment.user?.fullname}</span>\n                            {body}\n                        </p>\n                    </div>\n                    <ul className={style.comment_item_images}>\n                        {\n                            comment.media_url?.map((url: string, index: number) => (\n                                <li key={index} className={style.comment_item_image}>\n                                    <div className={style.comment_item_image_cnt}>\n                                        <img src={url} alt=\"\" />\n                                    </div>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                    <ul className={style.comment_item_child}>\n                        {\n                            comment.children?.map((child: ITrendCommentChild, i: number) => (\n                                <li key={i} className={style.comment_item_child_item}>\n                                    <div className={style.comment_user_avatar}>\n                                        <img\n                                            src={child.user?.avatar ?? icon.userCircle}\n                                            alt=\"\"\n                                            onError={(e) => onErrorImg(e)}\n                                        />\n                                    </div>\n                                    <div className={style.comment_item_par_right}>\n                                        <div\n                                            style={{ backgroundColor: \"#EAE9F5\" }}\n                                            className={style.comment_item_box}\n                                        >\n                                            <p className={style.comment_text}>\n                                                <span className={style.comment_user_name} >{child.user?.fullname}</span>\n                                                {child.body}\n                                            </p>\n                                            {/* <div className={style.comment_bot}>\n                                                <span className={style.comment_bot_create}>\n                                                    {moment('2022-10-11 11:22:00').locale(\"vi\").fromNow()}\n                                                </span>\n                                            </div> */}\n                                        </div>\n                                    </div>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\nconst LoadComment = () => {\n    return (\n        <ul className={style.detail_comment_list}>\n            {\n                [1, 2, 3, 4].map(i => (\n                    <li key={i} className={style.load_item}>\n                        <div className={style.load_item_left}>\n                            <Skeleton width={'100%'} height={'100%'} style={{ borderRadius: \"100%\" }} />\n                        </div>\n                        <div className={style.load_item_right}>\n                            <Skeleton width={'100%'} height={'100%'} />\n                        </div>\n                    </li>\n                ))\n            }\n        </ul>\n    )\n}"],"names":["props","open","setOpen","_id","Dialog","fullScreen","TrendsDetail","id","onClose","dayjs","relativeTime","history","useHistory","IS_MB","useDeviceMobile","response","useFetch","API_3RD","trends","context","data","HeadMobile","onBackFunc","push","title","Container","className","style","map","item","index","VideoItemThumb","videoRef","useRef","itemRef","useState","onDetail","current","pause","isVisible","useElementOnScreen","root","rootMargin","threshold","onClick","ref","formatRouterLinkOrg","organization_id","src","organization_image","alt","organization_name","url","media_url","width","height","playing","muted","playsinline","controls","icon","tiktok","digg_count","comment_count","share_count","content","params","useParams","trend_id","trend","org","useSwr","API_ROUTE","onToggleFavorite","favoriteSt","useFavorite","org_id","type","count","favorites_count","favorite","is_favorite","resData","totalItem","isValidating","useFetchInfinite","commentsTrend","param","paramsComment","comments","loadPost","postComment","totalComment","useComment","goBack","iconSize","loop","playsInline","subdomain","formatDateFromNow","createdAt","services","service","to","pathname","formatRouterLinkService","service_name","play_count","favorite_count","LoadComment","TrendsDetailComment","refCommentCnt","initialBody","commentable_type","commentable_id","models","body","USER","useSelector","state","setBody","onSubmitComment","async","length","media_ids","i","model_id","scrollIntoView","behavior","CommentItem","comment","avatar","onError","e","onErrorImg","onRemoveImg","filter","original_url","value","onChange","target","classNamePar","placeholder","onKeyDown","mediaList","postMediaMulti","multiple","loading","JSON","parse","text","error","user","fullname","children","child","backgroundColor","borderRadius"],"sourceRoot":""}