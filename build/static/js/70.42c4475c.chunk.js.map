{"version":3,"file":"static/js/70.42c4475c.chunk.js","mappings":"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","sources":["webpack://web-booking/./src/pages/Messenger/message.module.css?0be0","pages/Messenger/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"message_container__AxLpV\",\"left\":\"message_left__k4A+R\",\"left_head\":\"message_left_head__T--mk\",\"left_head_top\":\"message_left_head_top__TNK6L\",\"left_head_txt\":\"message_left_head_txt__MsKN9\",\"left_head_bot\":\"message_left_head_bot__gwXBX\",\"left_body\":\"message_left_body__xLWq0\",\"topic\":\"message_topic__bGPa4\",\"topic_left_img\":\"message_topic_left_img__s85aR\",\"topic_left_online\":\"message_topic_left_online__7lGks\",\"topic_right\":\"message_topic_right__B9HX4\",\"topic_name\":\"message_topic_name__VZ3tS\",\"topic_message\":\"message_topic_message__Cxfkf\",\"right\":\"message_right__T+jke\",\"left_ch\":\"message_left_ch__pIzTj\",\"right_ch\":\"message_right_ch__Yr32q\"};","import { useAuth, useSwrInfinite } from \"hooks\";\nimport { ITopic } from \"interface\";\nimport { paramsTopic } from \"params-query\";\nimport { useState } from \"react\";\nimport { Link, Route, Switch, useLocation } from \"react-router-dom\";\nimport { Loader, Right } from \"./components\"\nimport style from \"./message.module.css\"\nimport icon from \"constants/icon\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { formatDateFromNow, onErrorAvatar, unique } from \"utils\";\nimport AuthRoute from \"route/AuthRoute\";\n\nfunction Messenger() {\n  const { USER } = useAuth()\n  const [query,] = useState(paramsTopic)\n  const location = useLocation()\n  const topic_id = location.pathname.split(\"/\")[2]\n  const { resData, onLoadMore, totalItem } = useSwrInfinite({\n    API_URL: \"topics\",\n    enable: USER,\n    params: query,\n    dedupingInterval: 0\n  })\n  const more = () => { if (resData.length < totalItem) { onLoadMore() } }\n  return (\n    <div className={style.container}>\n      <div className={topic_id ? `${style.left} ${style.left_ch}` : style.left}>\n        <div className={style.left_head}>\n          <div className={style.left_head_top}>\n            <span className={style.left_head_txt}>Chat</span>\n            <div className={style.left_head_ctl}></div>\n          </div>\n          <div className={style.left_head_bot}>\n            <img src={icon.searchGray} alt=\"\" />\n            <input type=\"text\" placeholder=\"Tìm kiếm trong tin nhắn...\" />\n          </div>\n        </div>\n        <div className={style.left_body}>\n          <InfiniteScroll\n            hasMore={true}\n            height={`calc(100vh - 172px)`}\n            dataLength={resData.length}\n            loader={resData.length < totalItem && <Loader />}\n            next={more}\n          >\n            <ul className={style.topic_list}>\n              {\n                resData.map((item: ITopic) => (\n                  <li key={item._id} className={style.topic_cnt}>\n                    <Topic item={item} />\n                  </li>\n                ))\n              }\n            </ul>\n          </InfiniteScroll>\n        </div>\n      </div>\n      <Switch>\n        <AuthRoute>\n          <Route path=\"/messages/:_id\">\n            <div\n              style={{ backgroundColor: 'var(--white)' }}\n              className={topic_id ? `${style.right} ${style.right_ch}` : style.right}\n            >\n              <Right />\n            </div>\n          </Route>\n        </AuthRoute>\n      </Switch>\n    </div>\n  );\n}\n\nexport default Messenger;\n\nconst Topic = ({ item }: { item: ITopic }) => {\n  const location = useLocation()\n  let name = item.name\n  if (item.name?.trim().length === 0 || !item.name) {\n    name = unique(item.topic_user?.map(i => i.user?.fullname).filter(Boolean)).join(\", \")\n  }\n  const topic_id = location.pathname.split(\"/\")[2]\n  return (\n    <Link\n      style={item._id === topic_id ? { backgroundColor: 'var(--bg-color)' } : {}}\n      to={{ pathname: `/messages/${item._id}`, state: item }}\n      className={style.topic}\n    >\n      <div className={style.topic_left}>\n        <div className={style.topic_left_img}>\n          <img src={item.topic_user[0]?.user?.avatar || ''} onError={onErrorAvatar} alt=\"\" />\n          <span className={style.topic_left_online}></span>\n        </div>\n      </div>\n      <div className={style.topic_right}>\n        <span className={style.topic_name}>\n          {name}\n        </span>\n        <div className={style.topic_message}>\n          <span>{item.messages[0]?.msg}</span>\n          <span>{formatDateFromNow(item.updated_at)}</span>\n        </div>\n      </div>\n    </Link>\n  )\n}"],"names":["USER","useAuth","query","useState","paramsTopic","topic_id","useLocation","pathname","split","resData","onLoadMore","totalItem","useSwrInfinite","API_URL","enable","params","dedupingInterval","_jsxs","className","style","children","_jsx","src","icon","alt","type","placeholder","InfiniteScroll","hasMore","height","dataLength","length","loader","Loader","next","more","map","item","Topic","_id","Switch","AuthRoute","Route","path","backgroundColor","Right","_ref","_item$name","_item$topic_user$","_item$topic_user$$use","_item$messages$","location","name","_item$topic_user","trim","unique","topic_user","i","_i$user","user","fullname","filter","Boolean","join","Link","to","state","avatar","onError","onErrorAvatar","messages","msg","formatDateFromNow","updated_at"],"sourceRoot":""}