{"version":3,"file":"static/js/767.aab6d954.chunk.js","mappings":"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","sources":["features/BuyNow/ProductItem.tsx","features/BuyNow/index.tsx","features/PaymentMethod/extraPaymentMethodId.ts","features/PaymentMethod/index.tsx","features/SectionTitle/index.tsx"],"sourcesContent":["import React from 'react';\nimport formatPrice from '../../utils/formatPrice';\nimport { DISCOUNT_TYPE } from '../../utils/formatRouterLink/fileType';\n\nfunction ProductItem(props: any) {\n    const { product, quantity } = props;\n    let DISCOUNT_FINAl = false;\n    if (product.discount?.discount_type === DISCOUNT_TYPE.FINAL_PRICE.key) {\n        DISCOUNT_FINAl = true\n    }\n    return (\n        <div className='buy-now-item'>\n            <div className=\"product-item\">\n                <img src={product.image_url} alt=\"\" className=\"product-item__img\" />\n            </div>\n            <div className=\"product-item__detail\">\n                <span className=\"product-item__detail-name\">\n                    {product.product_name}\n                </span>\n                <div className=\"product-item__detail-total\">\n                    <span className=\"quantity\">x {quantity}</span>\n                    <div className=\"price\">\n                        {\n                            DISCOUNT_FINAl ?\n                                <span>{formatPrice(product.discount?.discount_value)}</span>\n                                :\n                                <>\n                                    {\n                                        product.special_price > 0 ?\n                                            <>\n                                                <span style={{ color: \"var(--orange)\" }} >{formatPrice(product.special_price)}đ</span>\n                                                <span>{formatPrice(product.retail_price)}đ</span>\n                                            </>\n                                            :\n                                            <span>\n                                                {formatPrice(product.retail_price)}đ\n                                            </span>\n                                    }\n                                </>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProductItem;","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {  useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Head from '../Head';\nimport HeadMobile from '../HeadMobile';\nimport HeadTitle from '../HeadTitle';\nimport { Container } from '@mui/material'\nimport './style.css';\nimport './serviceDetail.css';\nimport { useSelector } from 'react-redux';\nimport UserPaymentInfo from '../../pages/Account/components/UserPaymentInfo';\nimport ProductItem from './ProductItem';\nimport formatPrice from '../../utils/formatPrice';\nimport PaymentMethodCpn from '../PaymentMethod';\nimport { FLAT_FORM_TYPE } from '../../rootComponents/flatForm';\nimport { extraPaymentMethodId } from '../PaymentMethod/extraPaymentMethodId';\nimport { EXTRA_FLAT_FORM } from '../../api/extraFlatForm';\nimport { pickBy, identity } from 'lodash'\nimport order from '../../api/orderApi';\nimport { IUserAddress } from '../../interface/userAddress'\nimport { formatAddCart } from '../../utils/cart/formatAddCart';\nimport { DISCOUNT_TYPE } from '../../utils/formatRouterLink/fileType';\nimport SectionTitle from '../SectionTitle';\n\n// ==== api tracking ====\nimport tracking from \"../../api/trackApi\";\nimport { formatProductList } from \"../../utils/tracking\";\nimport { XButton } from 'components/Layout';\nimport { useDeviceMobile } from 'hooks';\nimport { DetailOrgCard } from 'pages/_SerProCoDetail';\n// end\nfunction BuyNow() {\n    const IS_MB = useDeviceMobile();\n    const location: any = useLocation();\n    const history = useHistory();\n    const FLAT_FORM = EXTRA_FLAT_FORM();\n    const { payments_method } = useSelector(\n        (state: any) => state.PAYMENT.PAYMENT\n    );\n    const [chooseE_wall, setChooseE_wall] = useState();\n    const [address, setAddress] = useState<IUserAddress>();\n    const { org, products } = location.state;\n    let { total } = products?.reduce(\n        (cartTotal: any, cartItem: any) => {\n            const { quantity, product } = cartItem;\n            let priceBuy = product.special_price > 0 ? product.special_price : product.retail_price\n            if (product.discount?.discount_type === DISCOUNT_TYPE.FINAL_PRICE.key) {\n                priceBuy = product.discount?.discount_value\n            }\n            const itemTotal = priceBuy * quantity;\n            cartTotal.total += itemTotal;\n            return cartTotal;\n        },\n        {\n            total: 0\n        }\n    );\n\n    const payment_method_id = extraPaymentMethodId(\n        payments_method,\n        chooseE_wall\n    );\n    const productsPost = products.map((item: any) => {\n        return {\n            id: item.product.id,\n            quantity: item.quantity\n        }\n    })\n    const listPayment = location.state?.products.map((item: any) => {\n        const is_type = 1;\n        const sale_price =\n            item.product?.special_price > 0\n                ? item.product?.special_price\n                : item.product?.retail_price;\n        const values = formatAddCart(\n            item.product,\n            org,\n            is_type,\n            item.quantity,\n            sale_price,\n        );\n        return values\n    })\n    const params_string = {\n        products: productsPost,\n        services: [],\n        treatment_combo: [],\n        payment_method_id: FLAT_FORM === FLAT_FORM_TYPE.BEAUTYX ? 1 : payment_method_id,\n        coupon_code: [],\n        description: \"\",\n        user_address_id: address?.id\n    }\n    async function handlePostOrder() {\n        //setLoading(true)\n        const params = pickBy(params_string, identity);\n        try {\n            const productsForTracking = products.map((i: any) => {\n                return {\n                    ...i.product,\n                    quantity: i.quantity\n                }\n            })\n            tracking.PAY_CONFIRM_CLICK(org?.id, formatProductList(productsForTracking))\n            const response = await order.postOrder(org?.id, params);\n            const state_payment = await response.data.context;\n            const desc = await state_payment.payment_gateway.description;\n            const transaction_uuid =\n                state_payment.payment_gateway.transaction_uuid;\n            if (response.data.context.status !== \"CANCELED\") {\n                history.push({\n                    pathname: `/trang-thai-don-hang/${desc}`,\n                    search: transaction_uuid,\n                    state: { state_payment, listPayment },\n                });\n            } else {\n                //setPopUpFail(true)\n            }\n            //setLoading(false);\n        } catch (err) {\n            console.log(err);\n            //setLoading(false);\n        }\n    }\n    const onClickPayment = () => {\n        if (address) {\n            if (FLAT_FORM === FLAT_FORM_TYPE.BEAUTYX) {\n                // if (chooseE_wall) {\n                    handlePostOrder()\n                // }\n            } else {\n                handlePostOrder()\n            }\n        }\n    }\n\n    return (\n        <>\n            <HeadTitle title=\"Chi tiết thanh toán\" />\n            {IS_MB ? <HeadMobile title='Chi tiết thanh toán' /> : <Head />}\n            <Container>\n                <div className=\"service-detail buy-now-cnt\">\n                    <div className=\"flex-row-sp buy-now__user\">\n                        <div className=\"buy-now__user-left\">\n                            <UserPaymentInfo\n                                onSetAddressDefault={setAddress}\n                            />\n                        </div>\n                        <div className=\"buy-now__user-right\">\n                            {org && <DetailOrgCard org={org} />}\n                        </div>\n                    </div>\n                    <div className=\"buy-now__list\">\n                        <span className=\"title\">Sản phẩm</span>\n                        <ul className=\"list\">\n                            {\n                                products?.map((item: any, index: number) => (\n                                    <li key={index} >\n                                        <ProductItem\n                                            product={item.product}\n                                            quantity={item.quantity}\n                                        />\n                                    </li>\n                                ))\n                            }\n                        </ul>\n                    </div>\n                    <div\n                        style={\n                            FLAT_FORM === FLAT_FORM_TYPE.BEAUTYX &&\n                                location.state.TYPE === \"BOOK_NOW\"\n                                ? { display: \"block\" }\n                                : { display: \"none\" }\n                        }\n                    >\n                        {\n                            FLAT_FORM === FLAT_FORM_TYPE.BEAUTYX\n                                ?\n                                <>\n                                    <SectionTitle title={'Phương thức thanh toán'} />\n                                    <span style={{\n                                        backgroundColor: \"var(--pink-momo)\",\n                                        marginLeft: \"12px\",\n                                        marginBottom: \"12px\",\n                                        padding: \"0px 8px\",\n                                        borderRadius: \"6px\",\n                                        color: \"var(--white)\"\n                                    }}>\n                                        MOMO\n                                    </span>\n                                    <br/>\n                                </>\n                                :\n                                <PaymentMethodCpn\n                                    e={chooseE_wall}\n                                    onPaymentMethodChange={setChooseE_wall}\n                                />\n                        }\n                    </div>\n                    <div className=\"buy-now__total-cnt\">\n                        <div className=\"buy-now__total\">\n                            <div className=\"flex-row-sp buy-now__total-bill\">\n                                <span>Tổng tiền</span>\n                                <span>{formatPrice(total)}đ</span>\n                            </div>\n                            <div className=\"buy-now__total-pay\">\n                                <div className=\"flex-row-sp amount-total\">\n                                    <span>Tổng thanh toán</span>\n                                    <span>{formatPrice(total)}đ</span>\n                                </div>\n                                <div className=\"amount-btn\">\n                                    <XButton\n                                        onClick={onClickPayment}\n                                        title='Thanh toán'\n                                        loading={false}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Container>\n        </>\n    );\n}\n\nexport default BuyNow;","import { EXTRA_FLAT_FORM } from \"../../api/extraFlatForm\";\nimport { FLAT_FORM_TYPE } from \"../../rootComponents/flatForm\";\n\nexport const extraPaymentMethodId = (payments_method: any[], chooseE_wall: any) => {\n    const FLAT_FORM = EXTRA_FLAT_FORM();\n    let payment_method_id;\n    switch (FLAT_FORM) {\n        case FLAT_FORM_TYPE.BEAUTYX:\n            payment_method_id = chooseE_wall?.id\n            // payment_method_id = 1\n            break\n        case FLAT_FORM_TYPE.MOMO:\n            payment_method_id = payments_method.find((item: any) => item.name_key === FLAT_FORM_TYPE.MOMO)?.id\n            break\n        case FLAT_FORM_TYPE.TIKI:\n            payment_method_id = payments_method.find((item: any) => item.name_key === FLAT_FORM_TYPE.TIKI)?.id\n            break\n        case FLAT_FORM_TYPE.MB:\n            payment_method_id = payments_method.find((item: any) => item.name_key === FLAT_FORM_TYPE.MB)?.id\n            break\n        default:\n            break\n    }\n    return payment_method_id\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\nimport SectionTitle from \"../SectionTitle/index\";\nimport { AppContext } from \"../../context/AppProvider\";\nimport { IPaymentMethod } from \"../../interface/paymentMethod\";\nimport { fetAsyncPaymentMethod } from '../../redux/payments/paymentSlice';\nimport { STATUS } from '../../redux/status'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport './cartPayment.css';\n\ninterface IProps {\n    e: any,\n    onPaymentMethodChange: (e: any) => void\n}\n\nfunction PaymentMethodCpn(props: IProps) {\n    const { t } = useContext(AppContext);\n    const dispatch = useDispatch();\n    const { status } = useSelector((state: any) => state.PAYMENT.PAYMENT);\n    const { PAYMENT_METHOD } = useSelector((state: any) => state.PAYMENT);\n    const { e, onPaymentMethodChange } = props;\n    const [value, setValue] = useState('');\n    const callPaymentMethodOnline = () => {\n        if (status !== STATUS.SUCCESS) {\n            dispatch(fetAsyncPaymentMethod())\n        }\n    }\n    useEffect(() => {\n        callPaymentMethodOnline()\n    }, [])\n    const handleOnChange = useCallback((event: any) => {\n        setValue(event.target.value);\n    }, [])\n\n    return (\n        <div>\n            <SectionTitle title={t(\"pm.choose_payment_method\")} />\n            <RadioGroup\n                aria-label=\"gender\"\n                name=\"controlled-radio-buttons-group\"\n                value={value}\n                onChange={handleOnChange}\n            >\n                <ul className=\"payment-method\">\n                    {PAYMENT_METHOD?.map((item: any) => (\n                        <li className=\"flex-column\" key={item.id}>\n                            <div className=\"flex-row payment-method-head\">\n                                <FormControlLabel\n                                    value={item.method}\n                                    control={\n                                        <Radio\n                                            sx={{ \"&.Mui-checked\": { color: \"var(--purple)\" } }}\n                                        />\n                                    }\n                                    label={item.title}\n                                />\n                                <img src={item.img} alt=\"\" />\n                            </div>\n                            <div\n                                style={\n                                    value === item.method\n                                        ? { display: \"block\" }\n                                        : { display: \"none\" }\n                                }\n                                className=\"pm-method_child\"\n                            >\n                                <ul>\n                                    {item.method_list?.filter((item: IPaymentMethod) => item?.name_key === \"MOMO\")\n                                        .map((item: IPaymentMethod) => (\n                                            <li\n                                                className=\"pm-method_child-item\"\n                                                key={item.id}\n                                                onClick={() => onPaymentMethodChange(item)}\n                                            >\n                                                <div\n                                                    className=\"pm-method_child-item_box\"\n                                                    style={\n                                                        e === item\n                                                            ? {\n                                                                backgroundColor: \"#7161BA\",\n                                                                color: \"white\",\n                                                            }\n                                                            : {\n                                                                backgroundColor: \"\",\n                                                                color: \"#7161BA\",\n                                                            }\n                                                    }\n                                                >\n                                                    {/* {chooseE_wall === item ? (\n                                                        <img src={icon.success} alt=\"\" />\n                                                    ) : (\n                                                        \"\"\n                                                    )} */}\n                                                    {item.name_key}\n                                                </div>\n                                            </li>\n                                        ))}\n                                </ul>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            </RadioGroup>\n        </div>\n    );\n}\n\nexport default PaymentMethodCpn;\n","import React from 'react';\nimport './sectionTitle.css'\n\nfunction SectionTitle(props:any) {\n      const {title, textAlign} = props;\n      return (\n            <div \n                  style={{textAlign:textAlign}}\n                  className=\"section-title\"\n            >\n                  {title}\n            </div>\n      );\n}\n\nexport default SectionTitle;"],"names":["props","product","quantity","DISCOUNT_FINAl","discount","discount_type","DISCOUNT_TYPE","className","src","image_url","alt","product_name","formatPrice","discount_value","special_price","style","color","retail_price","IS_MB","useDeviceMobile","location","useLocation","history","useHistory","FLAT_FORM","EXTRA_FLAT_FORM","payments_method","useSelector","state","PAYMENT","chooseE_wall","setChooseE_wall","useState","address","setAddress","org","products","total","reduce","cartTotal","cartItem","priceBuy","itemTotal","payment_method_id","extraPaymentMethodId","productsPost","map","item","id","listPayment","sale_price","formatAddCart","params_string","services","treatment_combo","FLAT_FORM_TYPE","coupon_code","description","user_address_id","async","handlePostOrder","params","pickBy","identity","productsForTracking","i","tracking","formatProductList","response","order","state_payment","data","context","desc","payment_gateway","transaction_uuid","status","push","pathname","search","err","console","log","HeadTitle","title","HeadMobile","Head","Container","UserPaymentInfo","onSetAddressDefault","index","TYPE","display","SectionTitle","backgroundColor","marginLeft","marginBottom","padding","borderRadius","PaymentMethod","e","onPaymentMethodChange","onClick","loading","find","name_key","t","useContext","AppContext","dispatch","useDispatch","PAYMENT_METHOD","value","setValue","useEffect","STATUS","fetAsyncPaymentMethod","handleOnChange","useCallback","event","target","RadioGroup","name","onChange","FormControlLabel","method","control","Radio","sx","label","img","method_list","filter","textAlign"],"sourceRoot":""}